ACTOR Inventory_Soulsphere : Inventory_Powerup
{
	inventory.pickupmessage "Soulsphere!"
	inventory.icon "ITEM01"
	inventory.maxamount 3
	
	States
	{
	Spawn.Init:
		ITM1 ABCDEFGH 2 bright
		loop
	MechSync:
		TNT1 A 0 A_JumpIfInventory("PlayUp_PowUpUpgrade_Defense" , 1,"PowUpUpgrade.Mech")
		goto Effect.Mech
	PowUpUpgrade_Cond:
		TNT1 A 0 A_JumpIfInventory("PlayUp_PowUpUpgrade_Defense" , 1,"PowUpUpgrade.Defense")
		TNT1 A 1 A_Jump(256, "Effect")
		goto Effect
	PowUpUpgrade.Defense:
		TNT1 A 0 A_GiveInventory("SuperSoulsphere", 1)
		goto Effect.Flash
	Effect:
		TNT1 A 0 ACS_NamedExecuteAlways("SFPlus_ItemCooldown", 0, 10)
		TNT1 A 0 A_GiveInventory("Soulsphere_Health", 1)
        goto Effect.Flash
	PowUpUpgrade.Mech:
		TNT1 A 0 ACS_NamedExecute("SFPlus_MechHeal", 0, 500)
		goto Effect.Flash
	Effect.Mech:
		TNT1 A 0 ACS_NamedExecute("SFPlus_MechHeal", 0, 250)
		goto Effect.Flash
	Effect.Flash:
		TNT1 A 0 ACS_NamedExecuteAlways("LightBarsSpawner", 0, radius, 1)
		TNT1 A 1 A_PlaySound("p/soulsphere", CHAN_AUTO, 2.0)
		goto Super::Effect.Flash
	}
}

// Megasphere
ACTOR Inventory_Megasphere : Inventory_Powerup
{
	inventory.pickupmessage "Megasphere!"
	inventory.icon "ITEM02"
	inventory.maxamount 3
	
	States
	{
	Spawn.Init:
		ITM2 ABCDEFGH 2 bright
		loop

	PowUpUpgrade_Cond:
		TNT1 A 0 A_JumpIfInventory("PlayUp_PowUpUpgrade_Defense" , 1,"PowUpUpgrade.Defense")
		TNT1 A 1 A_Jump(256, "Effect")
		goto Effect

	PowUpUpgrade.Defense:
		TNT1 A 0 A_GiveInventory("SuperMegasphere_Health", 1)
		TNT1 A 0 A_JumpIfInventory("Flag_RedArmor", 1, "IHaveRedArmor.PowUpDefense")
		TNT1 A 0 A_GiveInventory("SuperMegasphere_Armor", 1)
		TNT1 A 0 A_TakeInventory("Flag_RedArmor", 1)
		TNT1 A 0 A_GiveInventory("Flag_BlueArmor",1) // To hold up the green armor override
		goto Effect.Flash
	Effect:
		TNT1 A 0 A_GiveInventory("Megasphere_Health", 1)
		TNT1 A 0 A_JumpIfInventory("Flag_RedArmor", 1, "IHaveRedArmor")
		TNT1 A 0 A_GiveInventory("MegaSphereArmor", 1) //Give this new type of armor that does not suck
		TNT1 A 0 A_TakeInventory("Flag_RedArmor", 1)
		TNT1 A 0 A_GiveInventory("Flag_BlueArmor",1) // To hold up the green armor override
		goto Effect.Flash
	Effect.Flash:
		TNT1 A 0 ACS_NamedExecuteAlways("LightBarsSpawner", 0, radius, 1)
		TNT1 A 1 A_PlaySound("p/megasphere", CHAN_AUTO, 2.0)
		goto Super::Effect.Flash

	// Skip giving armor if already wearing the red armor.
	// Repair the red armor if needed.
	IHaveRedArmor.PowUpDefense:
		TNT1 A 0 ACS_NamedExecuteAlways("Armor_CompleteTo", 0, 300)
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 1, "Effect.Flash") 
		goto PowUpUpgrade.Defense+3
	
	IHaveRedArmor:
		TNT1 A 0 ACS_NamedExecuteAlways("Armor_CompleteTo", 0, 200)
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 1, "Effect.Flash")
		goto Effect+3
		
	MechSync:
		TNT1 A 0 A_JumpIfInventory("PlayUp_PowUpUpgrade_Defense" , 1,"PowUpUpgrade.Mech")
		goto Effect.Mech
	PowUpUpgrade.Mech:
		TNT1 A 0 ACS_NamedExecute("SFPlus_MechHeal", 0, 2000)
		goto Effect.Flash
	Effect.Mech:
		TNT1 A 0 ACS_NamedExecute("SFPlus_MechHeal", 0, 1000)
		goto Effect.Flash
	}
}

// Godsphere
ACTOR Inventory_Godsphere : Inventory_Powerup
{
	inventory.pickupmessage "Godsphere!"
	inventory.icon "ITEM03"
	inventory.maxamount 1
	
	States
	{
	Spawn.Init:
		ITM3 ABCDEFGH 2 bright
		loop
	MechSync:
		TNT1 A 0 A_JumpIfInventory("PlayUp_PowUpUpgrade_Defense" , 1,"PowUpUpgrade.Defense")
		goto Effect
	PowUpUpgrade_Cond:
		TNT1 A 0 A_JumpIfInventory("PlayUp_PowUpUpgrade_Defense" , 1,"PowUpUpgrade.Defense")
		TNT1 A 1 A_Jump(256, "Effect")
		goto Effect
	PowUpUpgrade.Defense:
		TNT1 A 0 A_GiveInventory("SuperInvulSphere", 1)
		goto Effect.Flash
	Effect:
		TNT1 A 0 A_GiveInventory("InvulnerabilitySphere", 1)
		goto Effect.Flash
	Effect.Flash:
		TNT1 A 0 ACS_NamedExecuteAlways("LightBarsSpawner", 0, radius, 1)
		TNT1 A 1 A_PlaySound("p/godsphere", CHAN_AUTO, 2.0)
		goto Super::Effect.Flash
	}
}

// Berserk 2.0
ACTOR Inventory_Berserk2 : Inventory_Powerup
{
	inventory.pickupmessage "Berserk 2.0!"
	inventory.icon "ITEM04"
	inventory.maxamount 1
	
	States
	{
	Spawn.Init:
		ITM4 ABCDEFGH 2 bright
		loop
	MechSync: // Allows the use inside mechs.
		TNT1 A 0 A_JumpIfInventory("PlayUp_PowUpUpgrade_Attack" , 1,"PowUpUpgrade.Attack")
		goto Effect
	PowUpUpgrade_Cond:
		TNT1 A 0 A_JumpIfInventory("PlayUp_PowUpUpgrade_Attack" , 1,"PowUpUpgrade.Attack")
		TNT1 A 1 A_Jump(256, "Effect")
		goto Effect
	PowUpUpgrade.Attack:
		TNT1 A 0 A_TakeInventory("PowerQuadDamage", 1)
		TNT1 A 0 A_TakeInventory("PlayUp_PowUpUpgrade_6xDmg", 1)
		TNT1 A 0 A_GiveInventory("Berserk8", 1)
		goto Effect.Flash
	Effect:
		TNT1 A 0 A_TakeInventory("PowerQuadDamage", 1)
		TNT1 A 0 A_TakeInventory("PlayUp_PowUpUpgrade_6xDmg", 1)
		TNT1 A 0 A_GiveInventory("Berserk2", 1)
		goto Effect.Flash
	Effect.Flash:
		TNT1 A 0 ACS_NamedExecuteAlways("LightBarsSpawner", 0, radius, 0)
		TNT1 A 1 A_PlaySound("p/berserk2", CHAN_AUTO, 2.0)
		goto Super::Effect.Flash
	}
}

// Ammo Giver
ACTOR Inventory_AmmoGiver : Inventory_Powerup
{
	inventory.pickupmessage "Ammo-Sphere!"
	inventory.icon "ITEM09"
	inventory.maxamount 1
	
	States
	{
	Spawn.Init:
		ITM9 A 2 bright
		loop
	PowUpUpgrade_Cond:
		TNT1 A 0 A_JumpIfInventory("PlayUp_PowUpUpgrade_Attack" , 1,"PowUpUpgrade.Attack")
		TNT1 A 1 A_Jump(256, "Effect")
		goto Effect
	PowUpUpgrade_Attack:
		TNT1 A 0 A_Jump(128,"Effect") // ~ 50 % Chance to activate the effect, but without wasting the item.
		TNT1 A 0 A_GiveInventory("Backpack", 1)
		TNT1 A 0 ACS_Execute(106, 0, -4)
		TNT1 A 1 A_Print("This powerup refuses to be depleted!.\n\n You can re-activate it again.")
		fail
	Effect:
		TNT1 A 0 ACS_NamedExecuteAlways("SFPlus_ItemCooldown", 0, 10)
		TNT1 A 0 A_GiveInventory("Backpack", 1)
		TNT1 A 0 ACS_NamedExecuteAlways("LightBarsSpawner", 0, radius, 2)
        TNT1 A 1 ACS_Execute(106, 0, -4)
		stop
	}
}

actor Berserk2 : PowerupGiver 32254
{
 inventory.pickupmessage "Berserk 2.0! Hell yeah!"
 powerup.color Red 0.25
	inventory.icon "ITEM04"
 inventory.maxamount 3
 inventory.usesound "pickups/slowmo"
 powerup.type QuadDamage
 powerup.duration 1050
 translation "128:143=120:127"
 +AUTOACTIVATE
inventory.maxamount 5
   states
 {
 Spawn:
   MEGA ABCD 4 bright
   goto Spawn
 }
}


// Hell-Trigger - Fire fast, and with no ammo usage.
ACTOR Inventory_HellTrigger : Inventory_Powerup
{
	inventory.pickupmessage "Hell-Trigger!"
	inventory.icon "ITEMP4"
	inventory.maxamount 1
	
	States
	{
	Spawn.Init:
		ITP4 ABCDEFGH 2 bright
		loop
	MechSync:
		TNT1 A 0 A_JumpIfInventory("PlayUp_PowUpUpgrade_Attack" , 1,"PowUpUpgrade.Attack")
		goto Effect
	PowUpUpgrade_Cond:
		TNT1 A 0 A_JumpIfInventory("PlayUp_PowUpUpgrade_Attack" , 1,"PowUpUpgrade.Attack")
		TNT1 A 1 A_Jump(256, "Effect")
		goto Effect
	PowUpUpgrade.Attack:
		TNT1 A 0 A_TakeInventory("Inv_Power_Infinity", 1)
		TNT1 A 0 A_TakeInventory("Inv_Power_FastFire", 1)
		TNT1 A 0 A_TakeInventory("Inv_Power_AmmoRegeneration", 1)
		TNT1 A 0 A_TakeInventory("Ammunition_InfiniteAmmo", 1)
		TNT1 A 0 ACS_NamedExecuteAlways("HellTriggerPower_AmmoRegeneration", 0, 1)
		goto Effect.Flash
	Effect:
		TNT1 A 0 A_TakeInventory("Inv_Power_Infinity", 1)
		TNT1 A 0 A_TakeInventory("Inv_Power_FastFire", 1)
		TNT1 A 0 A_TakeInventory("Inv_Power_AmmoRegeneration", 1)
		TNT1 A 0 A_TakeInventory("Ammunition_InfiniteAmmo", 1)
		TNT1 A 0 ACS_NamedExecuteAlways("HellTriggerPower_AmmoRegeneration", 0, 0)
		goto Effect.Flash
	Effect.Flash:
		TNT1 A 0 ACS_NamedExecuteAlways("LightBarsSpawner", 0, radius, 3)
		TNT1 A 1 A_PlaySound("p/godsphere", CHAN_AUTO, 2.0)
		goto Super::Effect.Flash
	}
}

Actor HellTrigger_AmmoSatchel : CustomInventory {
	Inventory.PickupSound "g/reloading"
	States {
		Spawn:
			ADDU A -1
		stop
		Pickup:
			TNT1 A 0 A_GiveInventory("ClipPistol", 1)
            TNT1 A 0 A_GiveInventory("Clip", 10)
			TNT1 A 0 A_GiveInventory("Shell", 1)
			TNT1 A 0 A_GiveInventory("RocketAmmo", 1)
			TNT1 A 0 A_GiveInventory("Cell", 25)
			TNT1 A 0 A_GiveInventory("Gasoline", 30)
			TNT1 A 0 A_GiveInventory("Flinger_Ammo", 1)
			TNT1 A 0 A_GiveInventory("Dualshot_Ammo", 2)
        stop
	}
}

ACTOR Inv_Power_AmmoRegeneration : PowerSpeed
{
	speed 1.0
	+PowerSpeed.NoTrail
}

ACTOR Inv_Power_Infinity : PowerInfiniteAmmo
{
	powerup.color Yellow 0.10
}
ACTOR Inv_Power_FastFire : PowerDoubleFiringSpeed
{
	powerup.color Yellow 0.10
}

ACTOR Inv_PowerGiver_HellTrigger_AmmoRegeneration : PowerupGiver
{
	powerup.type Inv_Power_AmmoRegeneration
	powerup.duration -20
	+INVENTORY.AUTOACTIVATE
}

ACTOR Inv_PowerGiver_HellTrigger_FastFire : PowerupGiver
{
	powerup.type Inv_Power_FastFire
	powerup.duration -20
	+INVENTORY.AUTOACTIVATE
}

ACTOR Inv_PowerGiver_HellTrigger_Infinity : PowerupGiver
{
	powerup.type Inv_Power_Infinity
	powerup.duration 90 // 2.5 seconds
	+INVENTORY.AUTOACTIVATE
}

ACTOR Inv_PowerGiver_HellTrigger_FastFire_2 : Inv_PowerGiver_HellTrigger_FastFire
{powerup.duration -45}
ACTOR Inv_PowerGiver_HellTrigger_Infinity_2 : Inv_PowerGiver_HellTrigger_Infinity
{powerup.duration -5} // 5 seconds
ACTOR Inv_PowerGiver_HellTrigger_AmmoRegeneration_2 : Inv_PowerGiver_HellTrigger_AmmoRegeneration
{powerup.duration -45}

// Greedsphere - Doubles your credits from defeated monsters.
ACTOR Inventory_Greedsphere : Inventory_Powerup
{
	inventory.pickupmessage "Greedsphere!"
	inventory.icon "ITEMP3"
	inventory.maxamount 1
	
	States
	{
	Spawn.Init:
		ITP3 ABCDEFGH 2 bright
		loop
	Effect:
		TNT1 A 0 A_GiveInventory("Inv_PowerGiver_Greed", 1)
		goto Effect.Flash
	Effect.Flash:
		TNT1 A 0 ACS_NamedExecuteAlways("LightBarsSpawner", 0, radius, 2)
		TNT1 A 1 A_PlaySound("p/godsphere", CHAN_AUTO, 2.0)
		goto Super::Effect.Flash
	}
}



ACTOR Inv_Power_Wealth : PowerSpeed
{
	speed 1.0
}

ACTOR Inv_PowerGiver_Greed : PowerupGiver
{
	powerup.color Green 0.10
	powerup.type Inv_Power_Wealth
	powerup.duration -15
	+INVENTORY.AUTOACTIVATE
}
ACTOR Inv_PowerGiver_Greed_2 : Inv_PowerGiver_Greed
{
	powerup.duration -30
}
