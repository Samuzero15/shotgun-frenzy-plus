Actor MonsterModifier : CustomInventory {
    Inventory.PickupMessage ""
    Inventory.PickupSound ""
    -CountItem
    states{
        Spawn:
            TNT1 A -1
        fail
        Pickup:
            TNT1 A 0
        stop
    }
}

Actor ChampBuff_Strong : PowerDamage{
    Powerup.Duration 0x7FFFFFFF
    DamageFactor Normal, 4.0
}

Actor ChampBuff_NormalAtk : PowerDamage {
    Powerup.Duration 0x7FFFFFFF
    DamageFactor Normal, 2.0
}

Actor ChampBuff_NormalDef : PowerProtection {
    Powerup.Duration 0x7FFFFFFF
    DamageFactor Normal, 0.7
}

ACTOR ChampBuff_Normal : CustomInventory
{
	+INVENTORY.AUTOACTIVATE
	states
	{
	Use:
		TNT1 A 0 A_GiveInventory("ChampBuff_NormalAtk",1)
        TNT1 A 0 A_GiveInventory("ChampBuff_NormalDef",1)
		Stop
	}
}


Actor MonMod_Hard : MonsterModifier {
    states {
        Pickup:
            TNT1 A 0 A_ChangeFlag("NOPAIN", true)
	        TNT1 A 0 A_ChangeFlag("MISSILEMORE", true)
	        TNT1 A 0 A_ChangeFlag("QUICKTORETALIATE", true)
	        TNT1 A 0 ACS_NamedExecuteAlways("Monster_HPBar", 0, height)
            TNT1 A 0 A_Log("Hard modifier applied.")
        stop
    }
}

Actor MonMod_Fast : MonsterModifier {
    states {
        Pickup:
            TNT1 A 0 A_ChangeFlag("NOPAIN", true)
            TNT1 A 0 A_Log("Fast modifier applied.")
        stop
    }
}

Actor MonMod_Strong : MonsterModifier {
    states {
        Pickup:
            TNT1 A 0 A_ChangeFlag("NOPAIN", true)
            TNT1 A 0 A_Log("Strong modifier applied.")
        stop
    }
}

Actor MonMod_Resistant : MonsterModifier {
    states {
        Pickup:
            TNT1 A 0 A_ChangeFlag("NOPAIN", true)
            TNT1 A 0 A_Log("Resistant modifier applied.")
        stop
    }
}
