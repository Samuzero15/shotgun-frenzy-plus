//Base and dummy actors go here

//Construction check
actor build_check : inventory
{
	inventory.amount 1
	inventory.maxamount 1
}

//*_Building actors base
actor BuildBase
{
	states
	{
		Spawn:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInTargetInventory("build_check", 1, 2)
		TNT1 A 0 A_Jump(256, "Spawn2")
		TNT1 A 1
		goto Spawn
	}
}

Actor Deploy_Column_Done : Integer {}

Actor Deploy_Column {
	radius 8
	height 56
	mass 10000
	speed 0
	Health 1
	+FLOORCLIP
	+DONTOVERLAP
	+NODAMAGETHRUST
	Monster
	-countkill
	-shootable
	+Noblockmap
	+noclip
	
	var int user_frame;
	var int user_repeat;
	var int user_tics;
	
	states
	{
	Spawn:
		BLDC A 0
		BLDC A 1 A_PlaySound("plats/pt1_strt", CHAN_AUTO)
	See:
	Col.Raise:
		BLDC ABCDEFGHI 1
		BLDC I 1 A_Jump(256, "Col.Build")
		goto Col.Build
	Col.Lower:
		BLDC IHGFEDCBA 1
		stop
	Col.Build: // Frames, 0 ticked for the common display
		BLDC J 0 
		goto Col.Build.Frame
	Col.Build.F1:
		BLDC K 0 
		goto Col.Build.Frame
	Col.Build.F2:
		BLDC L 0 
		goto Col.Build.Frame
	Col.Build.F3:
		BLDC M 0
		goto Col.Build.Frame
	Col.Build.F4:
		BLDC N 0 
		goto Col.Build.Frame
	Col.Build.F5:
		BLDC O 0 
		goto Col.Build.Frame
	Col.Build.F6:
		BLDC P 0 
		goto Col.Build.Frame
	Col.Build.F7:
		BLDC O 0
		goto Col.Build.Frame
	Col.Build.F8:
		BLDC N 0 
		goto Col.Build.Frame
	Col.Build.F9:
		BLDC M 0 
		goto Col.Build.Frame
	Col.Build.F10:
		BLDC L 0 
		goto Col.Build.Frame
	Col.Build.F11:
		BLDC K 0 
		goto Col.Build.Frame.Last
	
	Col.Build.Repeat: // In random intervals, spawn sparks after 4 - 12 frames.
		"####" "#" 0 A_SetUserVar("user_repeat", random(4,12))
	Col.Build.Jump:// Jumper depending on frame.
		"####" "#" 0 A_JumpIfInventory("Deploy_Column_Done", 1, "Death", AAPTR_MASTER)
		"####" "#" 0 A_JumpIf(user_frame == 11, "Col.Build.F11")
		"####" "#" 0 A_JumpIf(user_frame == 10, "Col.Build.F10")
		"####" "#" 0 A_JumpIf(user_frame == 9, "Col.Build.F9")
		"####" "#" 0 A_JumpIf(user_frame == 8, "Col.Build.F8")
		"####" "#" 0 A_JumpIf(user_frame == 7, "Col.Build.F7")
		"####" "#" 0 A_JumpIf(user_frame == 6, "Col.Build.F6")
		"####" "#" 0 A_JumpIf(user_frame == 5, "Col.Build.F5")
		"####" "#" 0 A_JumpIf(user_frame == 4, "Col.Build.F4")
		"####" "#" 0 A_JumpIf(user_frame == 3, "Col.Build.F3")
		"####" "#" 0 A_JumpIf(user_frame == 2, "Col.Build.F2")
		"####" "#" 0 A_JumpIf(user_frame == 1, "Col.Build.F1")
		"####" "#" 1 
		goto Col.Build
	
	Col.Build.Frame: // Display frame
		"####" "#" 0 A_JumpIfInventory("Deploy_Column_Done", 1, "Death", AAPTR_MASTER)
		"####" "#" 0 A_SetUserVar("user_repeat", user_repeat-1)
		"####" "#" 0 A_SetUserVar("user_frame", user_frame+1)
		"####" "#" 0 A_JumpIf(user_repeat > 0, 1)// Sparking interval.
		goto Col.Spark
		"####" "#" 1 
		goto Col.Build.Jump
	
	Col.Build.Frame.Last: // Same, but resets back to 0
		"####" "#" 0 A_JumpIfInventory("Deploy_Column_Done", 1, "Death", AAPTR_MASTER)
		"####" "#" 0 A_SetUserVar("user_repeat", user_repeat-1)
		"####" "#" 0 A_SetUserVar("user_frame", 0)
		"####" "#" 0 A_JumpIf(user_repeat > 0, 1)// Sparking interval.
		goto Col.Spark
		"####" "#" 1 
		goto Col.Build.Jump
		
	Col.Spark: // Sparky
		"####" "#" 0 A_SpawnItemEx("splatEmitter_CFX2", 0, 0, 8)
		// 50 Tic looper.
		"####" "#" 0 A_SetUserVar("user_tics", user_tics+1)
		"####" "#" 0 A_JumpIfInventory("Deploy_Column_Done", 1, "Death", AAPTR_MASTER)
		"####" "#" 0 A_JumpIf(user_tics > 50, 2)
		"####" "#" 1 
		goto Col.Spark+1
		"####" "#" 0 A_SetUserVar("user_tics", 0)
		"####" "#" 0 A_PlaySound("plats/pt1_stop", CHAN_AUTO)
		goto Col.Build.Repeat
	
		Death:
		"####" "#" 1
		goto Col.Lower
		
	}
}

// All turrets and dispensers are built in nearly 10 seconds.

// Actor wrappers, for the turrets and dispenser build columns
Actor Deploy_TurretBuilders {
	// Dummy actor for tracking the building time for each building.
	Health 1
	radius 1
	height 1
	-Solid
	Monster
	-CountKill
	-Shootable
	
	var int user_tics;
	var int user_prog;
	
	States
	{
		Spawn:
		TNT1 A 0
		TNT1 A 1 // Building set spawner
		TNT1 A 0 A_SpawnItemEx("Deploy_Counter", 0, 0, 64, 0, 0, 0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION, 0, tid)
		TNT1 A 0 A_SpawnItemEx("Deploy_Column", 32, 32, 0, 0, 0, 0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION, 0, tid)
		TNT1 A 0 A_SpawnItemEx("Deploy_Column", -32, 32, 0, 0, 0, 0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION, 0, tid)
		TNT1 A 0 A_SpawnItemEx("Deploy_Column", -32, -32, 0, 0, 0, 0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION, 0, tid)
		TNT1 A 0 A_SpawnItemEx("Deploy_Column", 32, -32, 0, 0, 0, 0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION, 0, tid)
		TNT1 A 1 A_Jump(256, "Timer.Set")
		goto Timer
		
		Timer.Set:
			TNT1 A 0 A_SetUserVar("user_prog", 29)
		goto Timer
		
		Timer: // Overridable!
			TNT1 A 0 A_JumpIf(user_tics > user_prog, "Timer.Ticker")
			TNT1 A 0 A_JumpIfInventory("Deploy_Counter_Done", 1, "Build.Done")
			TNT1 A 1 A_SetUserVar("user_tics", user_tics+1)
			TNT1 A 0 A_TakeInventory("Deploy_Counter_Progress", 1)
		loop
		Timer.Ticker: // Add up 1 for each delay.
			TNT1 A 0 A_JumpIfInventory("Deploy_Counter_Done", 1, "Build.Done")
			TNT1 A 0 A_GiveInventory("Deploy_Counter_Progress", 1)
			TNT1 A 0 A_SetUserVar("user_tics", 0)
		goto Timer
		
		Build.Done: // Hide the building set, and send the finished signal.
			TNT1 A 1 
			TNT1 A 0 A_GiveInventory("Deploy_Column_Done", 1)
			TNT1 A 0 A_GiveInventory("Deploy_Building_Done", 1, AAPTR_MASTER)
			TNT1 A 0 A_JumpIfInventory("Deploy_Column_Done", 1, "Done") // Just in case.
		loop
		Death: // Guys this boi is ded.
			TNT1 A 1 //A_Log("The deployer is gone!")
		stop
		Done:
			TNT1 A 1
		Stop
	}
}


Actor Deploy_DispenserBuilders : Deploy_TurretBuilders {
	States
	{
		Spawn:
		TNT1 A 0
		TNT1 A 0 A_SpawnItemEx("Deploy_Counter", 0, 0, 64, 0, 0, 0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION, 0, tid)
		TNT1 A 0 A_SpawnItemEx("Deploy_Column", 16, 16, 0, 0, 0, 0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION, 0, tid)
		TNT1 A 0 A_SpawnItemEx("Deploy_Column", -16, 16, 0, 0, 0, 0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION, 0, tid)
		TNT1 A 0 A_SpawnItemEx("Deploy_Column", -16, -16, 0, 0, 0, 0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION, 0, tid)
		TNT1 A 0 A_SpawnItemEx("Deploy_Column", 16, -16, 0, 0, 0, 0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION, 0, tid)
		TNT1 A 1 A_Jump(256, "Timer")
		goto Timer
	}
}

Actor Deploy_Building_Tics : Integer {}
Actor Deploy_Building_Done : Boolean {}
Actor Deploy_Building_Destroyed : Boolean {}

ACTOR Deploy_Building
{
	radius 8
	height 8
	mass 99999
	speed 0
	MONSTER
	-CountKill
	+FRIENDLY
	+FLOORCLIP
	+NODAMAGETHRUST
	-Solid
	+Thruspecies
	Species "Marines"
		// Immnune to Marine fire.
		
		damagefactor "MarineFire", 0.0
		damageFactor "MarineFire2", 0.0
		DamageFactor "MarineFire3", 0.0
		
        DamageFactor "BFGSplash", 0.0
        DamageFactor "BFGSpray", 0.0
	damagefactor "NoProfitKill", 0.0
	Painchance 256
	states
	{
		Spawn:
			TBAS A 1
			// Make sure you don't mix up the Player TID with other actors.
			TNT1 A 0 A_SetArg(0, tid)
			TNT1 A 0 A_SetArg(1, CallACS("Deploy_TID", tid, 0))
			TNT1 A 0 A_SetArg(2, CallACS("Deploy_TID", tid, 1))
			TNT1 A 0 ACS_NamedExecuteAlways("DebugTID", 0, 0, args[0])
			TNT1 A 0 ACS_NamedExecuteAlways("DebugTID", 0, 1, args[1])
			TNT1 A 0 ACS_NamedExecuteAlways("DebugTID", 0, 2, args[2])
			TNT1 A 0 Thing_ChangeTID(0, args[1])
			TBAS A 0 A_Jump(256, "Build")
		Build:
			TBLD A 1 A_SpawnItemEx("Deploy_TurretBuilders", 0, 0, 0, 0, 0, 0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION, 0, args[1])
			goto Delay
		Delay:
			TNT1 A 0 A_JumpIfInventory("Deploy_Building_Done", 1, "Deploy")
			TBLD AAAAABBBBB 1 bright A_JumpIfInventory("Deploy_Building_Done", 1, "Deploy")
			TNT1 A 0 A_JumpIfInventory("Deploy_Building_Done", 1, "Deploy")
			loop
		Deploy: // Deploy something here!
			TNT1 A 1 
			stop
		
		Death:
			TNT1 A 1 
			stop
		
		
	}
}

Actor Deploy_Counter_Progress : Integer {}
ACTOR Deploy_Counter_Done : Boolean {}
ACTOR Deploy_Counter
{	// Same good old counter, except it warps to the deployer.
	radius 3
	height 3
	scale 0.5
	+NOGRAVITY
	
	Health 1
	Monster
	-countkill
	-shootable
	+Noblockmap
	
	renderstyle add
	var int user_progress;
	
	States
	{
		Spawn:
			CONT A 1 
			goto Frame
		Bar:
			CONT A 0 
		goto Frame
		Bar.F1:
			CONT B 0 
		goto Frame
		Bar.F2:
			CONT C 0 
		goto Frame
		Bar.F3:
			CONT D 0 
		goto Frame
		Bar.F4:
			CONT E 0 
		goto Frame
		Bar.F5:
			CONT F 0 
		goto Frame
		Bar.F6:
			CONT G 0 
		goto Frame
		Bar.F7:
			CONT H 0
		goto Frame
		Bar.F8:
			CONT I 0 
		goto Frame
		Bar.F9:
			CONT J 0 
		goto Frame
		Bar.F10:
			CONT K 0 
		goto Frame
		Bar.F11:
			CONT L 0 
		goto Frame
		Bar.F12:
			TNT1 A 0 
		goto Frame.Last
		
		Jump:
			"####" "#" 0 A_SetUserVar("user_progress", user_progress+1)
			"####" "#" 0 A_JumpIf(user_progress == 12, "Bar.F12")
			"####" "#" 0 A_JumpIf(user_progress == 11, "Bar.F11")
			"####" "#" 0 A_JumpIf(user_progress == 10, "Bar.F10")
			"####" "#" 0 A_JumpIf(user_progress == 9, "Bar.F9")
			"####" "#" 0 A_JumpIf(user_progress == 8, "Bar.F8")
			"####" "#" 0 A_JumpIf(user_progress == 7, "Bar.F7")
			"####" "#" 0 A_JumpIf(user_progress == 6, "Bar.F6")
			"####" "#" 0 A_JumpIf(user_progress == 5, "Bar.F5")
			"####" "#" 0 A_JumpIf(user_progress == 4, "Bar.F4")
			"####" "#" 0 A_JumpIf(user_progress == 3, "Bar.F3")
			"####" "#" 0 A_JumpIf(user_progress == 2, "Bar.F2")
			"####" "#" 0 A_JumpIf(user_progress == 1, "Bar.F1")
		goto Bar
		
		Frame:
			"####" "#" 1 A_Warp(AAPTR_Master, 0, 0, 64, 0, WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
			"####" "#" 0 A_JumpIfInventory("Deploy_Counter_Progress", 1, "Jump", AAPTR_MASTER)
		loop
		
		Frame.Last:
			TNT1 A 1
		Death:
			TNT1 A 1 A_GiveInventory("Deploy_Counter_Done", 1, AAPTR_MASTER)
			TNT1 A 1
		Stop
	}
}

/**
	A Samu's Quick note.
	The column builders will always be modified by the time delay.
	This means the time can be finally customized upon deploying stuff!
	Override it like this:
	
	***
	Actor TurretBuilders_Bullet : Deploy_TurretBuilders 
	{
		States
		{
			Timer.Set:
				TNT1 A 0 A_SetUserVar("user_prog", 29) <- 29*12 / 35 = nearly 10 seconds!
			goto Super::Timer
		}
	}
	***
	
	And then on the deployable building, override build and deploy states.
	
	***
	ACTOR TurretBullet : Deploy_Building // The item to be deployed.
	{
		states
		{
			Build:
				TBLD A 1 A_SpawnItemEx("TurretBuilders_Bullet", 0, 0, 0, 0, 0, 0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION, 0, args[1])
				// ^^ The delay time ^^
				goto Super::Delay
		
			Deploy:
				NULL A 1 A_SpawnItemEx("TurretBullet_Head", 0, 0, 0, 0, 0, 0, 0, SXF_SETMASTER, 0, args[2])
				// ^^ The item to deploy ^^
				NULL A 1 //A_NoBlocking
				stop
		}
	}
	***
*/


Actor Turret_HealthBar {
	Height 1
	Radius 1
	
	scale 0.30
	renderstyle Add
	Alpha 0.5
	+NOINTERACTION
	+CLIENTSIDEONLY
	+NOCLIP
	-SOLID
	
	//RenderStyle "Stencil"
	
	States{
		Spawn:
			BUHB A -1 BRIGHT
		stop
		HP_0:
			BUHB A -1 BRIGHT
		stop
		HP_1:
			BUHB B -1 BRIGHT
		stop
		HP_2:
			BUHB C -1 BRIGHT
		stop
		HP_3:
			BUHB D -1 BRIGHT
		stop
		HP_4:
			BUHB E -1 BRIGHT
		stop
		HP_5:
			BUHB F -1 BRIGHT
		stop
		HP_6:
			BUHB G -1 BRIGHT
		stop
		HP_7:
			BUHB H -1 BRIGHT
		stop
		HP_8:
			BUHB I -1 BRIGHT
		stop
		HP_9:
			BUHB J -1 BRIGHT
		stop
		HP_10:
			BUHB K -1 BRIGHT
		stop
		HP_11:
			BUHB L -1 BRIGHT
		stop
		HP_12:
			BUHB M -1 BRIGHT
		stop
		HP_13:
			BUHB N -1 BRIGHT
		stop
		HP_14:
			BUHB O -1 BRIGHT
		stop
		HP_15:
			BUHB P -1 BRIGHT
		stop
		HP_16:
			BUHB Q -1 BRIGHT
		stop
		HP_17:
			BUHB R -1 BRIGHT
		stop
		HP_18:
			BUHB S -1 BRIGHT
		stop
		HP_19:
			BUHB T -1 BRIGHT
		stop
		HP_20:
			BUHB U -1 BRIGHT
		stop
	}
}

Actor Turret_Died : Boolean {}
Actor Turret_Gone : Boolean {}

ACTOR TurretStand
{
	radius 16
	height 8
	mass 999999
	speed 0
	health 999999
	Monster
    DamageFactor "BFGSplash", 0.0
    DamageFactor "BFGSpray", 0.0
	damagefactor "MarineFire", 0.0
	damageFactor "MarineFire2", 0.0
	DamageFactor "MarineFire3", 0.0
	damagefactor "NoProfitKill", 0.0
	+NOBLOOD
	+NOBLOCKMAP
	States
	{
		Spawn:
			TBAS A 1
			goto Stay
		Stay:
			"####" "#" 1
			// Check if the turret is removed from game.
			"####" "#" 1 A_JumpIfInventory("Turret_Died", 1, "Boom", AAPTR_Target) 
			// Check if the turret was destroyed.
			"####" "#" 1 A_CheckFlag("FRIENDLY", "Stay", AAPTR_Target) 
			"####" "#" 1
			goto Death
		Death:
			"####" "#" 1 
			stop
		Boom:
			"####" "#" 50
			"####" "#" 1 A_SpawnItem("Junk_Turret_Spawn")
			goto Fade
		Fade:
			"####" "#" 1 A_FadeOut(0.1)
			loop
	}
}


ACTOR StreakEffect
{
	radius 8
	height 32
	+NOGRAVITY
	+NoBlockMap
	+FORCEYBILLBOARD
	+ClientsideOnly
	renderstyle add
	
}

Actor DispenserPickup : CustomInventory{
	radius 8
	height 32
	+INVENTORY.QUIET//[Samu] Shadap!
}

actor BulletPuffTurret : BulletPuff { 
	+Mthruspecies
	+thruspecies
	damagetype "MarineFire" 
}


//move this if incorrect placement
ACTOR TurretHeadBase //this will quickly add flags to all the damn turrets (or anything else)
{
	obituary "%o was shot up by a Turret."
	health 500
	radius 16
	height 64
	mass 0x7FFFFFF
	speed 0
	painchance 0
	reactiontime 1
	MONSTER
	-IsMonster
	+QUICKTORETALIATE
	+FLOORCLIP
	+FRIENDLY
	+FASTER
	+NOBLOOD
	+LOOKALLAROUND
	+NEVERRESPAWN
	+NODAMAGETHRUST
	+NORADIUSDMG
	+DONTRIP
	+DROPOFF
	+THRUSPECIES
	+MISSILEMORE
	+MISSILEEVENMORE
	DeathSound "turret/death"
	scale 0.5
	damagefactor "MarineFire", 0.0
	damageFactor "MarineFire2", 0.0
	DamageFactor "MarineFire3", 0.0
    DamageFactor "BFGSplash", 0.0
    DamageFactor "BFGSpray", 0.0
	damagefactor "NoProfitKill", 0.0
	Species Marines
	-SOLID
	
	var int user_crithealth;
	states
	{
		Spawn:
			TNT1 A 1
			TNT1 A 1 // acs_NamedExecuteAlways("SF_CHECC", 0)
			TNT1 A 0 ACS_NamedExecuteAlways("Turret_HPBar", 0, 40)
			TNT1 A 0 ACS_NamedExecuteAlways("DebugTID", 0, 0, tid)
			TNT1 A 0 A_SetArg(0, CallACS("GetUniqueTID", 0))
			TNT1 A 0 A_SetUserVar("user_crithealth", health/2)
			TNT1 A 1 A_Jump(256, "Spawn.Head")
			goto Spawn.Head
		
		Pain:
			"####" "#" 1
			"####" "#" 1 A_Pain
			"####" "#" 1 A_Jump(256, "See")
			goto See
		
		Death:
			"####" "#" 1
			"####" "#" 0 A_GiveInventory("Turret_Died", 1)
			"####" "#" 1 A_Scream
            "####" "#" 0 A_NoBlocking
			"####" "#" 0 bright A_SpawnItemEx("Explode_Turret", 0)
			"####" "#" 50
			"####" "#" 0 bright A_SpawnItemEx("Explosion_Small", 0)
			"####" "#" 0 bright A_StopSoundEx ("SoundSlot5")
			TNT1 A 1 bright A_PlaySound ("weapons/rocklx")
			stop
	}
}
