///////////////////////////////////////////////////
//      SHOTGUN FRENZY
//   a mod by Wad'a'Holic

// f_Price.acs
// quick price setup

#library "fl_Price"
#import "fl_techs.acs"
#import "f_intDB.acs"
#import "fc_AStr.acs"
#include "zcommon.acs"
#include "acsutils.acs"
#include "samu_tools.acs"

int fp_Price[499][2]; // [Samu] I'll do a clone of this.
int fp_PriceStack = 0;

//This syncher over here is meant to be used by Samu-terminal.

//Remember, to let the terminal sync values, It's more efficient to use Inventory items.
//Sure, you will end up with a long-ass Decorate, but that's a small price worth to pay. 
script "SFPlus_PriceSyncher1" ENTER
{// Synchs all of the prices so far. Start to End
	//log(s:"Syncing from start to end.");
	int counter;
	while(true){
		setActivatorToPlayer(playerNumber());
		if(counter == fp_priceStack) counter = 0;
		
		SetInventory(Prices_getKey(counter), Prices_getValue_I(counter));
		counter++;
		delay(1);
	}
}

script "SFPlus_PriceSyncher2" ENTER
{// Synchs all of the prices so far. End to Start
	//log(s:"Syncing from end to start.");
	int counter;
	while(true){
		setActivatorToPlayer(playerNumber());
		if(counter == fp_priceStack) counter = 0;
		
		SetInventory(Prices_getKey(fp_PriceStack-1 - counter), Prices_getValue_I(fp_PriceStack-1 - counter));
		counter++;
		delay(1);
	}
}

script "SFPlus_DefinePrices" Open
{// [Samu] Here you can define/change all of your prices.
 // 	   To sync with the clientside (Samu-Terminal, specially), 
 //		   invoke this script.
 
	Prices_add("null",	-1); // Yeheah boai.
	
	// Price on weapon packs
	Prices_add("pr_wb_shotgun",			2300);
	Prices_add("pr_wb_assault",			2500);
	Prices_add("pr_wb_support",			350);
	Prices_add("pr_wb_commando",		4500);
	Prices_add("pr_wb_heavy",			5000);
	Prices_add("pr_wb_plasma",			6000);
	Prices_add("pr_wb_flamer",			15000);
	Prices_add("pr_wb_bfg",				25000);
	
	//Price on upgrade (On U.P. Points!)
	Prices_add("pr_wu_boomstick_up0", 	1);
	Prices_add("pr_wu_ssg_up1", 		1);
	Prices_add("pr_wu_ssg_up2", 		1);
	Prices_add("pr_wu_quadshot_up0", 	2);
	Prices_add("pr_wu_spitter_up1", 	1);
	Prices_add("pr_wu_spitter_up2", 	1);
	Prices_add("pr_wu_buckshot_up1", 	1);
	Prices_add("pr_wu_buckshot_up2", 	2);
	Prices_add("pr_wu_supplier_up0", 	1);
	Prices_add("pr_wu_repeater_up1", 	2);
	Prices_add("pr_wu_repeater_up2", 	2);
	Prices_add("pr_wu_dualshot_up1", 	2);
	Prices_add("pr_wu_dualshot_up2", 	2);
	Prices_add("pr_wu_launcher_up1", 	1);
	Prices_add("pr_wu_launcher_up2", 	2);
	Prices_add("pr_wu_flinger_up1", 	1);
	Prices_add("pr_wu_flinger_up2", 	2);
	Prices_add("pr_wu_plasmagun_up1", 	1);
	Prices_add("pr_wu_plasmagun_up2", 	2);
	Prices_add("pr_wu_railgun_up1", 	1);
	Prices_add("pr_wu_railgun_up2", 	2);
	Prices_add("pr_wu_flamer_up0", 		2);
	Prices_add("pr_wu_bfg_up0", 		4);
	
	//Price on recycling.
	Prices_add("pr_wr_ssg", 			700);
	Prices_add("pr_wr_ssg_up1", 		1000);
	Prices_add("pr_wr_ssg_up2", 		1250);
	Prices_add("pr_wr_quadshot", 		700);
	Prices_add("pr_wr_quadshot_up0", 	3000);
	Prices_add("pr_wr_spitter", 		700);
	Prices_add("pr_wr_spitter_up1", 	1000);
	Prices_add("pr_wr_spitter_up2", 	1000);
	Prices_add("pr_wr_buckshot", 		700);
	Prices_add("pr_wr_buckshot_up1", 	1200);
	Prices_add("pr_wr_buckshot_up2", 	1800);
	Prices_add("pr_wr_supplier", 		500);
	Prices_add("pr_wr_supplier_up0", 	1200);
	Prices_add("pr_wr_repeater", 		2600);
	Prices_add("pr_wr_repeater_up1", 	3200);
	Prices_add("pr_wr_repeater_up2", 	3200);
	Prices_add("pr_wr_dualshot", 		2600);
	Prices_add("pr_wr_dualshot_up1", 	3500);
	Prices_add("pr_wr_dualshot_up2", 	3500);
	Prices_add("pr_wr_launcher", 		1500);
	Prices_add("pr_wr_launcher_up1", 	2000);
	Prices_add("pr_wr_launcher_up2", 	2000);
	Prices_add("pr_wr_flinger", 		1500);
	Prices_add("pr_wr_flinger_up1", 	2000);
	Prices_add("pr_wr_flinger_up2", 	2000);
	Prices_add("pr_wr_plasmagun", 		1500);
	Prices_add("pr_wr_plasmagun_up1", 	2000);
	Prices_add("pr_wr_plasmagun_up2", 	2000);
	Prices_add("pr_wr_railgun", 		1500);
	Prices_add("pr_wr_railgun_up1", 	2000);
	Prices_add("pr_wr_railgun_up2", 	2000);
	Prices_add("pr_wr_flamer", 			10000);
	Prices_add("pr_wr_flamer_up0", 		15000);
	Prices_add("pr_wr_bfg", 			20000);
	Prices_add("pr_wr_bfg_up0", 		30000);
	
	//Item prices
	Prices_add("pr_p_soulsphere", 		150);
	Prices_add("pr_p_megasphere", 		300);
	Prices_add("pr_p_godsphere", 		8000);
	Prices_add("pr_p_berserk2", 		7000);
	Prices_add("pr_i_backpack", 		2850);
	Prices_add("pr_i_mines", 			850);
	Prices_add("pr_d_drone_saw", 		400);
	Prices_add("pr_d_drone_mine", 		100);
	Prices_add("pr_d_disp_health", 		500);
	Prices_add("pr_d_disp_ammo", 		500);
	Prices_add("pr_d_turret_bullet", 	800);
	Prices_add("pr_d_turret_rocket", 	1500);
	Prices_add("pr_d_turret_plasma", 	1700);
	Prices_add("pr_d_turret_rail", 		1900);
	Prices_add("pr_d_turret_flame", 	2300);
	Prices_add("pr_d_turret_shells", 	1200);
	
	//Commander Prices
	
	//Prices for researching/building
	Prices_add("pr_cmd_genlab", 			2500);
	Prices_add("pr_cmd_armory", 			2500);
	Prices_add("pr_cmd_mechfa", 			8500);
	Prices_add("pr_cmd_refine", 			3500);
	Prices_add("pr_cmd_marcom",			5500);
	Prices_add("pr_cmd_nukesy", 			15000);
	
	//Gen-lab researches
	Prices_add("pr_cmd_gl_health1", 		1000);
	Prices_add("pr_cmd_gl_health2", 		2000);
	Prices_add("pr_cmd_gl_armor1", 		1500);
	Prices_add("pr_cmd_gl_resisb",  		2000);
	Prices_add("pr_cmd_gl_speedb", 		1500);
	Prices_add("pr_cmd_gl_regenb", 		2000);
	
	//Armory researches
	Prices_add("pr_cmd_ar_arms1", 		1500);
	Prices_add("pr_cmd_ar_arms2", 		2000);
	Prices_add("pr_cmd_ar_boomrn",		2000);
	Prices_add("pr_cmd_ar_ammobp",	 	1500);
	Prices_add("pr_cmd_ar_stimpk",	  	1200);
	
	//Refinery researches
	Prices_add("pr_cmd_rf_pump1", 		4500);
	Prices_add("pr_cmd_rf_pump2", 		4500);
	
	//Marine command researches
	Prices_add("pr_cmd_mc_advsys", 		1200);
	Prices_add("pr_cmd_mc_airsup", 		4000);
	Prices_add("pr_cmd_mc_ioncan", 		5000);
	Prices_add("pr_cmd_mc_cpulse", 		2000);
	
	//Commander deploys / actions
	Prices_add("pr_cmd_turret_bullet", 	600);
	Prices_add("pr_cmd_turret_rocket", 	1500);
	Prices_add("pr_cmd_turret_plasma", 	800);
	Prices_add("pr_cmd_turret_flame", 	2000);
	Prices_add("pr_cmd_turret_tesla", 	1800);
	Prices_add("pr_cmd_turret_chaingun",2300);
	Prices_add("pr_cmd_turret_shotgun", 1000);
	Prices_add("pr_cmd_turret_rail", 	1600);
	Prices_add("pr_cmd_disp_health", 	600);
	Prices_add("pr_cmd_disp_ammo", 		600);
	//Prices_add("pr_cmd_airstrike", 		850);// Updateable price.
	Prices_add("pr_cmd_moneybag", 		3000);
	Prices_add("pr_cmd_minefield", 		750);
	Prices_add("pr_cmd_sandbags", 		200);
	
	//Mech prices
	Prices_add("pr_mech", 				12000);
	Prices_add("pr_mu_nails", 			2500);
	Prices_add("pr_mu_rockets", 		5500);
	Prices_add("pr_mu_armor", 			5000);
	Prices_add("pr_mu_speed", 			3000);
	Prices_add("pr_mu_life_save", 		30000);
	Prices_add("pr_mu_self_destruct", 	8000);
	Prices_add("pr_mu_auto_repair", 	4000);
	Prices_add("pr_mu_efficiency", 		15000);
	
	//Play Up. prices
	Prices_add("pr_pu_powupupgrade",		4);
	Prices_add("pr_pu_mechsync",			2);
	Prices_add("pr_pu_expansiverestock",	2);
	Prices_add("pr_pu_bodyenhancement",		3);
	Prices_add("pr_pu_armorrepair",			3);
	Prices_add("pr_pu_spawnshield",			2);
	Prices_add("pr_pu_healcoins",			2);
	Prices_add("pr_pu_prometeo",			4);
	Prices_add("pr_pu_runesync",			2);
	
	//Prices_add("pr_mu_auto_repair", 	3500); // Heh. Another future thing.
	//ACS_NamedExecute("SFPlus_UpdatePrices", 0);
}

function void Prices_add(str inv, int price){
	fp_Price[fp_PriceStack][0] = inv;
	fp_Price[fp_PriceStack][1] = price;
	fp_PriceStack++;
}

function int Prices_getIndex(str key){
	bool found = false;
	int indx = 0;
	int mid = fp_PriceStack / 2;
	// [Samu] Binary search that crap, for quicker results.
	
	if(StrICMP(key, Prices_getKey(mid)) == 0){ // It is exactly on the middle?
			indx = mid;
			found = true;
		}
	
	for(int i=0,j=fp_PriceStack-1; (i < fp_PriceStack) && (i <= j) && (!found); i++, j--){
		if(StrICMP(key, Prices_getKey(i)) == 0){ 
			indx = i;
			found = true;
		}
		if(StrICMP(key, Prices_getKey(j)) == 0){ 
			indx = j;
			found = true;
		}
	}
	
	return indx;
}

function void Prices_Set(str key,int value){
	fp_Price[Prices_getIndex(key)][1] = value;
}

function int Prices_getValue_K(str key){
	return fp_Price[Prices_getIndex(key)][1];
}

function str Prices_getKey(int indx){
	return fp_Price[indx][0];
}

function int Prices_getValue_I(int indx){
	return fp_Price[indx][1];
}

//For compatibility stuff
int f_Price[499];	// up to 499 items can be brought

// easier way to customise the prices (with a script)
script 900 OPEN
{
    f_Price[0]=     0;      // (ignored)
    f_Price[1]=     2500;      // Genetics Lab
    f_Price[2]=     2500;      // Armory
    f_Price[3]=     8500;      // Marine Command (NOW MECH FACTORY)
    f_Price[4]=     3500;      // Refinery
    f_Price[5]=     5500;      // Demonic Lab (NOW MARINE COMMAND)
    f_Price[6]=     15000;      // Nuclear Silo
    f_Price[7]=     0;      // 
    f_Price[8]=     0;      // 
    f_Price[9]=     0;      // 
    f_Price[10]=    0;      // 
    f_Price[11]=    0;      // 
    f_Price[12]=    1000;      // Human Engineering Phase 1
    f_Price[13]=    2000;      // Human Engineering Phase 2
    f_Price[14]=    0;      // 
    f_Price[15]=    1500;      // Adrenaline
    f_Price[16]=    1500;      // Steel Plating
    f_Price[17]=    2000;      // Resister Unit
    f_Price[18]=    2000;      // Absorber Unit
    f_Price[19]=    150;      // Soulsphere
    f_Price[20]=    300;      // Megasphere
    f_Price[21]=    8500;      // Godsphere
    f_Price[22]=    7000;      // Berserk 2.0
    f_Price[23]=    3850;      // Personal Backpack
    f_Price[24]=    0;      //  
    f_Price[25]=    4500;      // Grunt Backpack
    f_Price[26]=    1500;      // Arms Phase 1
    f_Price[27]=    2000;      // Arms Phase 2
    f_Price[28]=    2000;      // Boomshot Rounds
    f_Price[29]=    1500;      // Ammo Backpack
    f_Price[30]=    100;      // Construct Sandbags
    f_Price[31]=    750;      // Construct Minefield
    f_Price[32]=    500;      // Construct Ammo Dispenser
    f_Price[33]=    500;      // Construct Health Dispenser
    f_Price[34]=    2300;      // Shotgunner Backpack
    f_Price[35]=    2500;      // Assault Backpack
    f_Price[36]=    350;      // Support Backpack
    f_Price[37]=    5000;      // Heavy Backpack
    f_Price[38]=    6000;      // Plasma Backpack
    f_Price[39]=    15000;      // Flamethrower
    f_Price[40]=    600;      // Construct Bullet Turret
    f_Price[41]=    1000;      // Construct Rocket Turret
    f_Price[42]=    800;      // Construct Plasma Turret
    f_Price[43]=    1000;      // Construct Rail Turret
    f_Price[44]=    1200;      // Advanced Systems
    f_Price[45]=    1000;      // Construct Shotgun Turret
    f_Price[46]=    1800;      // Construct Tesla Turret
    f_Price[47]=    2500;      // Construct Flame Turret
    f_Price[48]=    900;      // Drone Tech
    f_Price[49]=    400;      // Mine Drone
    f_Price[50]=    500;      // Saw Drone
    f_Price[51]=    0;      // Turret Drone
    f_Price[52]=    12000;      // Buy Mech Tank
    f_Price[53]=    4000;      // Ion Heat
    f_Price[54]=    4000;      // Air Support
    f_Price[55]=    0;      // Motion Tracking
    f_Price[56]=    4500;      // Processing Phase 1
    f_Price[57]=    4500;      // Processing Phase 2
    f_Price[58]=    0;      // Entering Tank
    f_Price[59]=    0;      // Exiting Tank
    f_Price[60]=    500;      // Summon pack of Lost Souls
    f_Price[61]=    500;      // Summon pack of Pinky Demons
    f_Price[62]=    900;      // Summon Revenant
    f_Price[63]=    1000;      // Summon Hell Knight
    f_Price[64]=    1500;      // Summon Baron of Hell
    f_Price[65]=    5000;      // Summon Cyberdemon
    f_Price[66]=    500;      // Pulse Rage (was 2000)
    f_Price[67]=    900;      // Cripple Pulse
    f_Price[68]=    500;      // Halt Pulse
    f_Price[69]=    3000;      // Core Revive
    f_Price[70]=    0;      // Repair tank
    f_Price[71]=    1200;      // Stimpacks 
    f_Price[72]=    25000;      // EXTRA BACKPACK: BFG 9000
    f_Price[73]=    0;      // 
    f_Price[74]=    0;      // 
    f_Price[75]=    0;      // Nuclear Attack
    f_Price[76]=    850;      // Airstrike
    f_Price[77]=    0;      // Minestrike
    f_Price[78]=    0;      // Detonate all mines
    f_Price[79]=    0;      // Fire Ion Cannon
    f_Price[80]=    2500;      // Money bag
    f_Price[81]=    0;      // Attack
    f_Price[82]=    0;      // Defend
    f_Price[83]=    0;      // Construct
    f_Price[84]=    0;      // Regroup
    f_Price[85]=    0;      // 
    f_Price[86]=    4000;      // Mech weapons upgrade 1	4000
    f_Price[87]=    0;      // 
    f_Price[88]=    0;      // 
    f_Price[89]=    0;      // 
    f_Price[90]=    5000;      // Mech armor upgrade 1	5000
    f_Price[91]=    5000;      // 
    f_Price[92]=    500;      // Deployable Health Dispenser
    f_Price[93]=    500;      // Deployable Ammo Dispenser
    f_Price[94]=    300;      // Deployable Marine Mine
    f_Price[95]=    600;      // Deployable Turret Bullet
    f_Price[96]=    1000;      // Deployable Turret Rocket
    f_Price[97]=    800;      // Deployable Turret Plasma
    f_Price[98]=    1250;      // Deployable Turret Rail
    f_Price[99]=    2000;      // Deployable Turret Flame
	
	//[Samu] Some more Items!
	f_Price[100]=   4550;		//The friggin ammo sphere!
    
    f_Price[401]=    700;      // barricade #1 - Floor rise (attached to tag 51)
    f_Price[402]=    1000;      // barricade #2 - Floor rise (attached to tag 52)
    f_Price[403]=    1300;      // barricade #3 - Floor rise (attached to tag 53)
    f_Price[404]=    300;      // barricade #3 - Floor rise (attached to tag 54)
}