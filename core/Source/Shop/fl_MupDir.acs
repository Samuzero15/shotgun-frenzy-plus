///////////////////////////////////////////////////
//      SHOTGUN FRENZY PLUS
//   a Shotgun Frenzy fork by Samuzero15tlh

// fl_MUpDir.acs
// Mech Upgrade directory

// Here it lays all of the mech upgrades on the game.
// For the prices, take a look at fl_price.

#library "fl_MupDir"
#import "f_intdb.acs"
#include "zcommon.acs"
#include "acsutils.acs"

#define FP_MECHUP_MAX 8

int MechUpTop = 0;
int mechup_list[FP_MECHUP_MAX][5];

function void SFPlus_DefineMechUps(void){
	MechUpTop = 0;
	MechUp_Add ("Nails","MechUp_Nails", "nails", 5,
		"Make them harder, make them better...");
	
	MechUp_Add ("Rockets", "MechUp_Rockets", "rockets", 5,  
		"Face it, explsions can save the day.");
	
	MechUp_Add ("Armor", "MechUp_Armor", "armor", 5, 
		"More resistance never done you harm.");
	
	MechUp_Add ("Manuvering", "MechUp_Speed", "speed", 3,
		"Tanks are slow, but you're on a hurry.");
	
	MechUp_Add1Up("Lifesave", "MechUp_LifeSave", "life_save",
		"On eject, you will return to the base.");
		
	MechUp_Add1Up("Self-Destruct", "MechUp_SelfDestruct", "self_destruct",
		"If this is it, then finish it with style.");
		
	MechUp_Add("Auto-Repair", "MechUp_AutoRepair", "auto_repair", 5,
		"Hey, if it's not broken, don't fix it.");
	
	MechUp_Add1Up("Efficiency", "MechUp_Efficiency", "efficiency",
		"Repair, fire and reload more effective!.");
		
}

function void MechUp_Add1Up (str name, str actor, str price, str desc){
	MechUp_Add (name, actor, price, 1, desc);
}
function void MechUp_Add (str name, str actor, str price, int maxupgs, str desc){
	int upg = MechUpTop;
	
	if(MechUpTop >= FP_MECHUP_MAX)
	{ 
		log(s:"(fl_Mupdir): Too much mecha upgrades!");
		return;
	}
	
	MechUp_List[upg][0] = name;
	MechUp_List[upg][1] = desc;
	MechUp_List[upg][2] = actor;
	MechUp_List[upg][3] = strparam(s:"pr_mu_", s:price); 
	MechUp_List[upg][4] = maxupgs; 
	MechUpTop++;
}

function str MechUp_getName(int up){		return MechUp_List[up][0];}
function str MechUp_getDesc(int up){		return MechUp_List[up][1];}
function str MechUp_getActor(int up){	return MechUp_List[up][2];}
function int MechUp_getPrice(int up){	
	int price = CheckInventory(MechUp_List[up][3]);
	return price + ((price * CheckInventory(MechUp_getActor(up))) / 4);

}
function int MechUp_getMax(int up){		return MechUp_List[up][4];}

function str MechUp_ReportUps(bool colored){
	str result = "Current stats";
	if(colored) result = Strparam(s:"\cn", s:result);
	result = Strparam(s:result, s:MechUp_StrUpgrade("Armor        ", 		2, colored));
	result = Strparam(s:result, s:MechUp_StrUpgrade("Nails        ", 		0, colored));
	result = Strparam(s:result, s:MechUp_StrUpgrade("Rockets      ",		1, colored));
	result = Strparam(s:result, s:MechUp_StrUpgrade("Manuvering   ", 		3, colored));
	result = Strparam(s:result, s:MechUp_StrUpgrade("Life Saver   ", 		4, colored));
	result = Strparam(s:result, s:MechUp_StrUpgrade("Self Destruct", 		5, colored));
	result = Strparam(s:result, s:MechUp_StrUpgrade("Auto Repair  ",   		6, colored));
	result = Strparam(s:result, s:MechUp_StrUpgrade("Efficiency   ",   		7, colored));
	
	return result;
}

function str MechUp_StrUpgrade(str string, int up, bool coloured){
	str res;
	int lvl_amount = CheckInventory(MechUp_getActor(up));
	str lvl_str = cond(lvl_amount == MechUp_getMax(up), "LV. MAX", strparam(s:"LV. ", d:lvl_amount));
	
	if(coloured){
		if(MechUp_getMax(up) > 1)
			res = Strparam(s:"\n \ch", s:string, s:" \cj", s:lvl_str);
		else if(lvl_amount) 
			res = Strparam(s:"\n \ch", s:string, s:" \cjREADY");
	}
	else{
		if(MechUp_getMax(up) > 1)
			res = Strparam(s:"\n ", s:string, s:" ", s:lvl_str);
		else if(lvl_amount) 
			res = Strparam(s:"\n ", s:string, s:" READY");
		
	}
	return res;
}