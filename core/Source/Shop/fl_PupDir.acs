///////////////////////////////////////////////////
//      SHOTGUN FRENZY PLUS
//   a Shotgun Frenzy fork by Samuzero15tlh

// fl_PUpDir.acs
// Player Upgrade directory

// Here it lays all of the player upgrades on the game.
// For the prices, take a look at fl_price.
// The prices are on UP points!

#library "fl_PupDir"
#import "f_intdb.acs"
#include "zcommon.acs"
#include "acsutils.acs"
//#include "samu_tools.acs"

#define FP_PLAYUP_MAX 10

int fp_PlayUpTrack = 0;
int PlayUpTop = 0;
int PlayUp_list[FP_PLAYUP_MAX][5];

function void SFPlus_DefinePlayUps(void){
	PlayUpTop = 0;
	
	PlayUp_Add ("Powerup Upgrade",		"PowUpUpgrade", 	"HBTN07");
	if(checkinventory("f_gametype") == 1 || f_GameType == 1)
		PlayUp_Add ("Mech Syncronize",		"MechSync", 		"HBTN05");
	//PlayUp_Add ("Rune Syncronize",		"RuneSync", 		"HBTN08");
	PlayUp_Add ("Expansive Restock",	"ExpansiveRestock",	"HBTN03");
	PlayUp_Add ("Body Enhancement",		"BodyEnhancement",	"HBTN02");
	PlayUp_Add ("Armor Repair",			"ArmorRepair",		"HBTN01");
	PlayUp_Add ("Spawn Protection",		"SpawnShield",		"HBTN09");
	PlayUp_Add ("Healing Coins",		"HealCoins",		"HBTN04");
	PlayUp_Add ("Prometeo Protocol",	"Prometeo",			"HBTN06");
}

function void PlayUp_Add (str name, str actor, str btnimg){
	int upg = PlayUpTop;
	
	if(PlayUpTop >= FP_PLAYUP_MAX)
	{ 
		log(s:"(fl_PUpDir): Too much unit upgrades!");
		return;
	}
	// Look up language.txt
	PlayUp_List[upg][0] = name;
	PlayUp_List[upg][1] = strparam(l:strparam(s:"FP_PUD_",s:actor));
	PlayUp_List[upg][2] = strparam(s:"PlayUp_",s:actor);
	// Lookup fl_price.acs
	PlayUp_List[upg][3] = strparam(s:"pr_pu_", s:actor); 
	PlayUp_List[upg][4] = btnimg;
	PlayUpTop++;
}

function str PlayUp_getName(int up){	return PlayUp_List[up][0];}
function str PlayUp_getDesc(int up){	return PlayUp_List[up][1];}
function str PlayUp_getActor(int up){	return PlayUp_List[up][2];}
function str PlayUp_getIcon(int up){	return PlayUp_List[up][4];}
function int PlayUp_getPrice(int up){	return CheckInventory(PlayUp_List[up][3]);}

function int PUTrack_GetScore(void){
	int i;
	int score = fp_PlayUpTrack;
	int players = 0;
	
	for(i = 0; i < 64; i++){
		if(PlayerInGame(i)) players++;
		else break;
	}
	if(!players) return 0;
	return score / players;
}

script "SFPlus_DebugPlayUps" (void){
	log(s:"===START===(Player upgrade Directory)===START===");
	for (int i = 0; i < PlayUpTop; i++ ){
		giveInventory(PlayUp_getActor(i), 1);
		log(s:"");
		log(s:PlayUp_getName(i), s:" (",d:PlayUp_getPrice(i), s:" U.Ps)", s:" [", s:PlayUp_getIcon(i), s:"]");
		log(s:"-----------------------------------------");
		log(s:PlayUp_getDesc(i));
		log(s:"=========================================");
		delay(1);
	}
	log(s:"====END====(Player upgrade Directory)====END====");
}

Script "SFPlus_TogglePlayerUp" (int which)
{
	ToggleInventory(PlayUp_getActor(which));
	log(s:PlayUp_getName(which), s:cond(CheckInventory(PlayUp_getActor(which)) > 0, " Enabled!", " Disabled!"));
}

Script "SFPlus_FullPlayerUps" (void)
{
	for (int i = 0; i < PlayUpTop; i++ ){
		giveInventory(PlayUp_getActor(i), 1);
		log(s:PlayUp_getName(i), s:" Set!");
	}
}