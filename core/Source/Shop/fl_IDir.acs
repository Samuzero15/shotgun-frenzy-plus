///////////////////////////////////////////////////
//      SHOTGUN FRENZY PLUS
//   a Shotgun Frenzy fork by Samuzero15tlh

// fl_ItemDir.acs
// item directory

// Here it lays all of the items on the game.
// For the prices, take a look at fl_price.

#library "fl_IDir"

#import "f_intdb.acs"
#import "fl_techs.acs"
#include "zcommon.acs"
#include "samu_tools.acs"


#libdefine FP_ITEM_NUM 255

// Useful for filters.
#libdefine FP_ITEM_T_POWERUP 1
#libdefine FP_ITEM_T_DEPLOY 2
#libdefine FP_ITEM_T_DEFAULT 0
#libdefine FP_ITEM_T_HIDDEN -1

#libdefine ITEMSHOP_ARMORY 0
#libdefine ITEMSHOP_HEALTH_POWERUP 1
#libdefine ITEMSHOP_HEALTH_MISC 2

#libdefine ITEMSHOP_NUM 4

int fp_Items[FP_ITEM_NUM][9];
int fp_itemshop[ITEMSHOP_NUM][100];
int fp_itemshop_last[ITEMSHOP_NUM];
int fp_LastItem = 0;

// Item properties
// 0) Item Actor
// 1) Item Name
// 2) Item Max amount

function void SFPlus_DefineItems(void){
	fp_LastItem = 0;
	fp_itemshop_last[ITEMSHOP_ARMORY] = 0;
	fp_itemshop_last[ITEMSHOP_HEALTH_POWERUP] = 0;
	fp_itemshop_last[ITEMSHOP_HEALTH_MISC] = 0;
	
	Item_Add_Powerup("Inventory_Soulsphere",  "soulsphere", 	3, CR_BLUE,  	"SOULSPHERE");
	Item_Add_Powerup("Inventory_Megasphere",  "megasphere", 	3, CR_CYAN,  	"MEGASPHERE");
	Item_Add_Powerup("Inventory_Godsphere",   "godsphere",  	1, CR_WHITE, 	"GODSPHERE");
	Item_Add_Powerup("Inventory_Berserk2",    "berserk2",   	1, CR_RED,		"BERSERK2");
	Item_Add_Powerup("Inventory_AmmoGiver",   "berserk2",   	1, CR_GREEN,	"AMMOSPHERE");
	
	if(GameSkill() != 0){
		Item_Add_Powerup("Inventory_Helltrigger", "helltrigger", 	1, CR_ORANGE,	"HELLTRIGGER");
	}
	
	
		
	Item_Add_Inv_Hide("p_backpack", 				"backpack", 		1, 		"PBACKPACK");
	Item_Add_Inv("Inventory_MarineMine", 			"mines", 			16, 	"MARINEMINE");
	Item_Add_Deploy("Inventory_MineDrone", 			"drone_mine", 		8, 		"MINEDRONE");
	Item_Add_Deploy("Inventory_SawDrone", 			"drone_saw", 		8, 		"SAWDRONE");
	Item_Add_Deploy("Inventory_HealthDispenser", 	"disp_health", 		3, 		"HEALDISP");
	Item_Add_Deploy("Inventory_AmmoDispenser",		"disp_ammo", 		3, 		"AMMODISP");
	Item_Add_deploy("Inventory_TurretBullet", 		"turret_bullet", 	8, 		"BULLTURRET");
	Item_Add_deploy("Inventory_TurretRocket", 		"turret_rocket", 	8, 		"ROCKTURRET");
	Item_Add_deploy("Inventory_TurretPlasma", 		"turret_plasma", 	8,	 	"PLASTURRET");
	Item_Add_deploy("Inventory_TurretRail", 		"turret_rail", 		8, 		"RAILTURRET");
	Item_Add_deploy("Inventory_TurretFlame",		"turret_flame", 	8, 		"FLAMTURRET");
	if(GameSkill() != 0){
		Item_Add_deploy("Inventory_TurretChaingun",		"turret_chaingun", 	8, 		"CHAITURRET");
		Item_Add_deploy("Inventory_TurretShotgun",		"turret_shotgun", 	8, 		"SHOTTURRET");

		Item_Add_Hidden("Inventory_GreedSphere", 	1, "GREEDSPHERE", true);
	}
	
	
	Item_Add_Hidden("Inventory_TeslaCoil",		8, "TESLTURRET", true);
	Item_Add_Hidden("Inventory_Stimpack", 		10, "STIMPACK", false);
	
}


//Definers
////////////////////////////////////////////

function void Item_Add_Deploy(str actor, str price, int max, str lang){
	str pr = strparam(s:"pr_d_", s:price);
	int it = Item_Add(FP_ITEM_T_DEPLOY, actor, max, pr, lang, true);
	Item_AppendToShop(it, ITEMSHOP_ARMORY);
}

function void Item_Add_Powerup(str actor, str price, int max, int color, str lang){
	str pr = strparam(s:"pr_p_", s:price);
	int it = Item_Add_Color(FP_ITEM_T_POWERUP, actor, max, pr, color, lang, true);
	Item_AppendToShop(it, ITEMSHOP_HEALTH_POWERUP);
}

function void Item_Add_Inv(str actor, str price, int max, str lang){
	str pr = strparam(s:"pr_i_", s:price);
	int it = Item_Add(0, actor, max, pr, lang, true);
	Item_AppendToShop(it, ITEMSHOP_ARMORY);
}

function void Item_Add_Inv_Hide(str actor, str price, int max, str lang){
	Item_Add_Inv(actor, price, max, lang);
	fp_Items[fp_LastItem-1][8] = false;
}

function void Item_Add_Hidden(str actor, int max, str lang, int showinihud){
	int it = Item_Add(-1, actor, max, 0, lang, showinihud);
}

function int Item_Add(int type, str actor, int max, int price, str lang, bool showinhud){
	str name = strparam(l:strparam(s:"ITDATA_N_",s:lang)); 
	str icon = strparam(l:strparam(s:"ITDATA_I_",s:lang)); 
	str desc = strparam(l:strparam(s:"ITDATA_D_",s:lang));
	str ibtn = strparam(l:strparam(s:"ITDATA_B_",s:lang));

	fp_Items[fp_LastItem][0] = type;
	fp_Items[fp_LastItem][1] = actor;
	fp_Items[fp_LastItem][2] = max;
	fp_Items[fp_LastItem][3] = price;
	fp_Items[fp_LastItem][4] = name;
	fp_Items[fp_LastItem][5] = icon;
	fp_Items[fp_LastItem][6] = desc;
	fp_Items[fp_LastItem][7] = ibtn;
	fp_Items[fp_LastItem][8] = showinhud;

	fp_LastItem++;
	return fp_LastItem;
}
function int Item_Add_Color(int type, str actor, int max, int price, int color, str lang, bool showinhud){
	str name = strparam(l:strparam(s:"ITDATA_N_",s:lang)); 
	str icon = strparam(l:strparam(s:"ITDATA_I_",s:lang)); 
	str desc = strparam(l:strparam(s:"ITDATA_D_",s:lang));

	fp_Items[fp_LastItem][0] = type;
	fp_Items[fp_LastItem][1] = actor;
	fp_Items[fp_LastItem][2] = max;
	fp_Items[fp_LastItem][3] = price;
	fp_Items[fp_LastItem][4] = name;
	fp_Items[fp_LastItem][5] = icon;
	fp_Items[fp_LastItem][6] = desc;
	fp_Items[fp_LastItem][7] = color;
	fp_Items[fp_LastItem][8] = showinhud;
	
	fp_LastItem++;
	return fp_LastItem;
}
// Getters
function int Item_GetType(int it){	return fp_Items[it][0];}
function int Item_GetActor(int it){	return fp_Items[it][1];}
function int Item_GetMax(int it){	return fp_Items[it][2];}
function int Item_GetPrice(int it){
	return CheckInventory(fp_Items[it][3]);
}
function int Item_GetName(int it){	return fp_Items[it][4];}
function int Item_GetIcon(int it){	return fp_Items[it][5];}
function int Item_GetDesc(int it){	return fp_Items[it][6];}
function int Item_GetIBtnOrColor(int it){return fp_Items[it][7];}
function int Item_GetShowInHud(int it){return fp_Items[it][8];}


function void Item_AppendToShop(int it, int shop){
	fp_itemshop[shop][fp_itemshop_last[shop]] = it-1;
	fp_itemshop_last[shop]++;
}
