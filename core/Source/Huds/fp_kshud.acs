///////////////////////////////////////////////////
//      SHOTGUN FRENZY PLUS
//   a Shotgun Frenzy fork by Samuzero15tlh

// fp_kshud.acs
// Kill streak HUD scripts.

// A little nice hud for the kill-streak count in game.

#library "FP_KSHUD"

#include "zcommon.acs"
#include "acsutils.acs"

#import "f_intdb.acs"

#define FP_KSHUD_IDB -2500
#define FP_KSHUD_ID1 FP_KSHUD_IDB+1
#define FP_KSHUD_ID2 FP_KSHUD_IDB+2
#define FP_KSHUD_ID3 FP_KSHUD_IDB+3

#define FP_KSHUD_W 640
#define FP_KSHUD_H 480

#define FP_KSHUD_FACTOR_X 0.5
#define FP_KSHUD_FACTOR_Y 0.23
#define FP_KSHUD_FACTOR_Y_T1 0.25
#define FP_KSHUD_FACTOR_Y_T2 0.28
#define FP_KSHUD_FADETIME 0.25
#define FP_KSHUD_HOLDTIME 2.0

#define FP_KSHUD_SCALETICS 5
#define FP_KSHUD_CR_OVERFLOW 	5
#define FP_KSHUD_CR_MILESTONE	21
#define FP_KSHUD_CR_HISCORE		9

script "SFPlus_KillStreakHud_Enter" ENTER{
	NamedExecuteClientScript("SFPlus_KillStreakHud", PlayerNumber());
}

script "SFPlus_KillStreakHud_Respawn" RESPAWN{
	NamedExecuteClientScript("SFPlus_KillStreakHud", PlayerNumber());
}

Script "SFPlus_KSHud_Death" DEATH
{
	int KSNow = p_Streak[PlayerNumber()];
	
	if(p_StreakHi[PlayerNumber()] < KSNow)
		p_StreakHi[PlayerNumber()] = KSNow;
}

script "SFPlus_KillStreakHud" (void) CLIENTSIDE {
	int KSLast = 0, KSNow, KSHiScore, KSMilestone;
	
	//int play = PlayerNumber();
	int scaleTics = 5, tics, numscale;
	
	while(PlayerHealth() >= 0){
		KSNow = CheckInventory("HUD_Streak");
		KSHiScore = CheckInventory("HUD_HiStreak");
		KSMilestone = CheckInventory("HUD_MsStreak");
		//p_KSHUD[play] = CheckInventory("HUD_KS");
		//log(s:"KillStreak HUD display?: ", d:p_KSHUD[play]);
		if((KSLast != KSNow && KSNow > 1)/* && p_KSHUD[play]*/){
			//log(s:"KILLSTREAK BEEP");
			ACS_NamedExecuteAlways("SFPlus_KSHud_Killstreak", 0, KSNow, KSHiScore, KSMilestone);
			numscale = 1;
		}
		
		if(numscale){
			switch(getCvar("sfp_killstreakhud"))
			{
				case 2: 
					if(KSNow < KSHiScore)
						ACS_NamedExecuteAlways("SFPlus_KSHud_Number_Add", 0, KSNow, KSHUD_CVarCheck("sfp_killstreakhud_color2"), 0);
					else if(KSNow < KSMilestone)
						ACS_NamedExecuteAlways("SFPlus_KSHud_Number_Add", 0, KSNow, KSHUD_CVarCheck("sfp_killstreakhud_color1"), 1);
					else
						ACS_NamedExecuteAlways("SFPlus_KSHud_Number_Add", 0, KSNow, KSHUD_CVarCheck("sfp_killstreakhud_color3"), 2);
				break;
				case 1:
					if(KSNow >= KSHiScore){
						if(KSNow < KSMilestone)
							ACS_NamedExecuteAlways("SFPlus_KSHud_Number_Add", 0, KSNow, KSHUD_CVarCheck("sfp_killstreakhud_color1"), 1);
						else
							ACS_NamedExecuteAlways("SFPlus_KSHud_Number_Add", 0, KSNow, KSHUD_CVarCheck("sfp_killstreakhud_color3"), 2);
					}
				break;
			}
		numscale = 0;
		}

		if(KSNow <= 1){
			ClearHudMessage(FP_KSHUD_ID1);
			ClearHudMessage(FP_KSHUD_ID2);
			ClearHudMessage(FP_KSHUD_ID3);
		}
		KSLast = KSNow;
		delay (1);
		//p_KSHUD[play] = 1;
	}
	ClearHudMessage(FP_KSHUD_ID1);
	ClearHudMessage(FP_KSHUD_ID2);
	ClearHudMessage(FP_KSHUD_ID3);
	ACS_NamedExecuteAlways("SFPlus_KSHud_Shutdown", 0, KSNow, KSHiScore);
}

Script "KillStreakHud_ClearDisconnect" (int play) DISCONNECT {
	ClearHudMessage(FP_KSHUD_ID1);
	ClearHudMessage(FP_KSHUD_ID2);
	ClearHudMessage(FP_KSHUD_ID3);
}

// Clientsided scripts.

Script "SFPlus_KSHud_Number_Add" (int value, int color, int type) CLIENTSIDE 
{
	if(IsClient() && consolePlayerNumber() == PlayerNumber() && PlayerInGame(PlayerNumber())){
		int tics, scale;
		str pre,suf;
		switch(type){
			case 0: pre = "";  suf = "";  break;
			case 1: pre = "<"; suf = ">"; break;
			case 2: pre = "("; suf = ")"; break;
		}
		while(tics < FP_KSHUD_SCALETICS){
			scale = 2*(FP_KSHUD_SCALETICS-tics);
			KSHud_ShowNumber(value, scale, color, pre, suf);
			tics++;
			delay(1);
		}
			
	}
}

Script "SFPlus_KSHud_Number_End" (int scale, int value) CLIENTSIDE 
{
	if(IsClient() && consolePlayerNumber() == PlayerNumber() && PlayerInGame(PlayerNumber())){
		KSHud_ShowNumber(value, scale, KSHUD_CVarCheck("sfp_killstreakhud_color4"), "", "");
	}
}

Script "SFPlus_KSHud_Killstreak" (int ks, int hiscore, int milestone) CLIENTSIDE 
{
	if(IsClient() && consolePlayerNumber() == PlayerNumber() && PlayerInGame(PlayerNumber())){
		
		switch(getCvar("sfp_killstreakhud")){
			case 2: 
				if(ks < hiscore){
					KSHud_ShowText1("On Streak!", KSHUD_CVarCheck("sfp_killstreakhud_color2"));
					KSHud_ShowText2(strparam(s:"\cf", d:hiscore ,s:"\c- kills to hi-score."), KSHUD_CVarCheck("sfp_killstreakhud_color2"));
				}else if(ks < milestone){
					KSHud_ShowText1("Kill-Streak!", KSHUD_CVarCheck("sfp_killstreakhud_color1"));
					KSHud_ShowText2(strparam(s:"\cf", d:milestone ,s:"\c- kills to milestone."), KSHUD_CVarCheck("sfp_killstreakhud_color1"));
				} else{
					KSHud_ShowText1("OverKill-Streak!", KSHUD_CVarCheck("sfp_killstreakhud_color3"));
					ClearHudMessage(FP_KSHUD_ID3);
				}
			break;
			case 1:
				if(ks >= hiscore){
					if(ks < milestone){
						KSHud_ShowText1("Kill-Streak!", KSHUD_CVarCheck("sfp_killstreakhud_color1"));
						KSHud_ShowText2(strparam(s:"\cf", d:milestone ,s:"\c- kills to milestone."), KSHUD_CVarCheck("sfp_killstreakhud_color1"));
					}else{
						KSHud_ShowText1("OverKill-Streak!", KSHUD_CVarCheck("sfp_killstreakhud_color3"));
						ClearHudMessage(FP_KSHUD_ID3);
					}
				}
			break;
		}
		
		
	}
}

Script "SFPlus_KSHud_Shutdown" (int value, int hiscore) CLIENTSIDE 
{
	if(IsClient() && consolePlayerNumber() == PlayerNumber() && PlayerInGame(PlayerNumber())){
		if(getCvar("sfp_killstreakhud") >= 1){
		ACS_NamedExecuteAlways("SFPlus_KSHud_Number_End", 0, 2, value);
		KSHud_ShowText1("Shutdown!", KSHUD_CVarCheck("sfp_killstreakhud_color4"));
		if(value > hiscore){
			KSHud_ShowText2(strparam(s:"New K.S. Hi-score: ", d:value, s:" kills!"),
			KSHUD_CVarCheck("sfp_killstreakhud_color2"));
		}else
		  if(getCvar("sfp_killstreakhud") == 2){
			KSHud_ShowText2(strparam(d:value, s:" kills in a row."),
			KSHUD_CVarCheck("sfp_killstreakhud_color4"));
		  }
		}
	}
}

// Functions to print.

function int KSHUD_CVarCheck(str which){
	return GetUserCvar(PlayerNumber(), which);
}

function void KSHud_ShowText1(str msg, int color){
	KSHud_Print(msg,
			0, FP_KSHUD_FACTOR_X, FP_KSHUD_FACTOR_Y_T1, color, "STATBIGS", FP_KSHUD_ID2);
}

function void KSHud_ShowText2(str msg,int color){
	KSHud_Print(msg,
			0, FP_KSHUD_FACTOR_X, FP_KSHUD_FACTOR_Y_T2, color, "Confont", FP_KSHUD_ID3);
}

function void KSHud_ShowNumber(int value, int scale, int color, str pre, str suf){
	KSHud_Print(strparam(s:pre, s:" ", d:value, s:" ", s:suf),
	scale, FP_KSHUD_FACTOR_X, FP_KSHUD_FACTOR_Y, color, "STATBIGS", FP_KSHUD_ID1);
}

function void KSHud_Print(str msg, int scale, int fx, int fy, int color, str font, int id){
	
	if(scale == 0) scale = 1;
	SetHudSize(FP_KSHUD_W/scale, FP_KSHUD_H/scale ,0);
	SetFont(font);
	HudMessage(s:msg;
	HUDMSG_FADEOUT | HUDMSG_ALPHA, id, color,
			((FP_KSHUD_W/scale) * fx), ((FP_KSHUD_H/scale) * fy), FP_KSHUD_HOLDTIME, FP_KSHUD_FADETIME, 
			fixedDiv(GetUserCvar(PlayerNumber(), "sfp_killstreakhud_alpha"), 100.0));
	SetHudSize(0, 0, 0);
}