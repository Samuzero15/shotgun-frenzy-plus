///////////////////////////////////////////////////
//      SHOTGUN FRENZY PLUS
//   a Shotgun Frenzy fork by Samuzero15tlh

// fp_ithud.acs
// item directory

// Display's what you got right now!

#library "fp_ithud"

#import "f_intdb.acs"
#import "fl_idir.acs"
#include "zcommon.acs"
#include "acsutils.acs"

// Useful for filters.
#libdefine ITEMHUD_ID_NUM 6200
#libdefine ITEMHUD_ID_IMG 6300
int itemhud_stack = 0;
int itemhud_caretx;
int itemhud_carety;

Script "SFPlus_InventoryList" ENTER Clientside{
	if(ConsolePlayerNumber() == Playernumber()){
		SFPlus_DefineItems();
		while(PlayerInGame(PlayerNumber())){
			for (int i = 0; i < fp_LastItem; i++){
				ItemHud_ShowItem(i);
			}
			ItemHud_Adjust(itemhud_stack);
			delay(1);
			ItemHud_Clear();
		}
	}
}

function void ItemHud_Clear(void){
	for (int i = itemhud_stack; i >= 0; i--){
		ClearHudMessage(ITEMHUD_ID_IMG+i); 
		ClearHudMessage(ITEMHUD_ID_NUM+i); 
	}
	itemhud_stack = 0;
}

function void ItemHud_Adjust(int items){
	int w = 800, h = 640;
	itemhud_caretx = w*0.5  - (32.0*(min(items-1, 16)))/2;
	itemhud_carety = h*0.75 - (32.0*((items-1)/16))/2;
}

function void ItemHud_ShowItem(int itemid) {
	
	int num = CheckInventory(Item_GetActor(itemid));
	int max_num = Item_GetMax(itemid);
	str img = Item_GetSphere(itemid);
	
	// Set position
	if(num > 0 && img != 0 && !CheckInventory("SamuTInv_UsingTerminal")) {
	
	int index = itemhud_stack;
	int w = 800, h = 640;
	int x, y, y_num, space = index*16.0;
	
		if(getCvar("screenblocks") == 11) {
			x = itemhud_caretx + (index%16)*32.0; 
			y = itemhud_carety + (index/16)*32.0;
			
		}else if (getCvar("screenblocks") < 11){
			x = itemhud_caretx + (index%16)*32.0; 
			y = itemhud_carety + (index/16)*32.0;
			
		}
		SetHudSize(w, h, 1);
		SetFont(img);
		HudMessage(s:"A"; HUDMSG_PLAIN | HUDMSG_ALPHA, ITEMHUD_ID_IMG+index, CR_WHITE, x, y, 3.0, 0.5);
		
		if(max_num > 1){
			SetFont("VERVIBES");
			HudMessage(s:cond(num == max_num, "\ci", "\cj"), d:num; HUDMSG_PLAIN | HUDMSG_ALPHA, ITEMHUD_ID_NUM+index, CR_WHITE, x, y, 3.0, 0.9);
		}
		itemhud_stack++;
	}
}