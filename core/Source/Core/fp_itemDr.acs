
#library "fp_itemDr"
#import "f_IntDB.acs"
#include "zcommon.acs"
//#include "samu_tools.acs"

// monster item rewards for different classes
#libdefine ITEMDROP_MAX 4
#libdefine ITEMDROP_PROPS 2
#libdefine ITEMDROP_ITEMS 6
#libdefine ITEMDROP_CLASSES 6

int ItemDr_stack;
int ItemDr_champStack;
int ItemDr_rewards[ITEMDROP_CLASSES][ITEMDROP_PROPS][ITEMDROP_ITEMS];
int ItemDr_championRewards[ITEMDROP_PROPS][ITEMDROP_ITEMS];

Script "ItemDr_InitRewards" open{
    //Initialize real quick.
    for (int i = 0; i < ITEMDROP_CLASSES; i++){
        for (int j = 0; j < ITEMDROP_PROPS; j++){
            for (int k = 0; k < ITEMDROP_ITEMS; k++){
                ItemDr_rewards[i][j][k] = 0;
                
            }
        }
    }

	int class = 0;
	ItemDr_Add_R(class, "Inventory_Soulsphere",     6.0);
	ItemDr_Add(class,   "Medikit",                  25.0);
	
	class = 1;
	ItemDr_Add_R(class, "Inventory_Megasphere",     10.0);
    ItemDr_Add(class,   "Medikit",                  25.0);
	
	class = 2;
	ItemDr_Add_R(class, "Inventory_Soulsphere",     16.0);
	ItemDr_Add(class,   "Inventory_Megasphere",     8.0);
    ItemDr_Add(class,   "SteelPlatingArmor_Pickup", 13.5);
    ItemDr_Add(class,   "Medikit",                  25.0);
	
	class = 3;
	ItemDr_Add_R(class, "Inventory_TurretBullet",   20.0);
	ItemDr_Add(class,   "Inventory_Soulsphere",     12.0);
	ItemDr_Add(class,   "Inventory_Berserk2",       10.0);
    ItemDr_Add(class,   "SteelPlatingArmor_Pickup", 13.5);
    ItemDr_Add(class,   "Medikit",                  25.0);
	
	class = 4;
	ItemDr_Add_R(class, "Inventory_TeslaCoil",      12.0);
	ItemDr_Add(class,   "Inventory_TurretBullet",   8.0);
	ItemDr_Add(class,   "Inventory_Berserk2",       6.0);
	ItemDr_Add(class,   "Inventory_Godsphere",      10.0);
    ItemDr_Add(class,   "SteelPlatingArmor_Pickup", 13.5);
    ItemDr_Add(class,   "Medikit",                  25.0);
	
	class = 5;
	ItemDr_Add_R(class, "Inventory_Berserk2",       12.0);
	ItemDr_Add(class,   "Inventory_Megasphere",     10.0);
	ItemDr_Add(class,   "Inventory_Godsphere",      6.0);
	ItemDr_Add(class,   "Inventory_Ammogiver",      6.0);
    ItemDr_Add(class,   "SteelPlatingArmor_Pickup", 13.5);
    ItemDr_Add(class,   "Medikit",                  25.0);
	
	class = 6;
	ItemDr_Add_R(class, "Inventory_Berserk2",       20.0);
	ItemDr_Add(class,   "Inventory_Megasphere",     16.0);
	ItemDr_Add(class,   "Inventory_Godsphere",      8.0);
	ItemDr_Add(class,   "Inventory_Ammogiver",      8.0);
    ItemDr_Add(class,   "SteelPlatingArmor_Pickup", 13.5);
    ItemDr_Add(class,   "Medikit",                  25.0);
}

function void ItemDr_Add_Champion(str item, int dropChance){
	ItemDr_championRewards[0][ItemDr_champStack] = item;
	ItemDr_championRewards[1][ItemDr_champStack] = dropChance;
	ItemDr_champStack++;
}

function void ItemDr_Add_R(int class, str item, int dropChance){
    ItemDr_stack = 0;
	ItemDr_Add(class,item,dropChance);
}

function void ItemDr_Add(int class, str item, int dropChance){
	ItemDr_rewards[class][0][ItemDr_stack] = item;
	ItemDr_rewards[class][1][ItemDr_stack] = dropChance;
	ItemDr_stack++;
}

function int ItemDr_getItem(int class,int nitem){
	return ItemDr_rewards[class][0][nitem];
}

function int ItemDr_Dice(int chance){
    bool fixed_d100 = random(0.0, 100.0);
    bool res = (fixed_d100 < chance);
    //log(s:"(ItemDr) Dice Chance: ", f:chance);
    //log(s:"(ItemDr) Dice Random: ", f:fixed_d100);
    //log(s:"(ItemDr) Dice Result: ", d:res);
    return res;
}

function int ItemDr_getChance(int class,int nitem){
	return ItemDr_rewards[class][1][nitem];
}

// mmm: drop reward item on monster death

function void ItemDr_Spawn(str item){
    if(item == 0) return;

    Spawn("ItemFog",
            GetActorX(0) + random(0, 10.0),
            GetActorY(0) + random(0, 10.0),
            GetActorFloorZ(0) + 10.0);
    Spawn(item,
            GetActorX(0) + random(0, 10.0),
            GetActorY(0) + random(0, 10.0),
            GetActorFloorZ(0) + 10.0);
}

function void ItemDr_ChampionDrop(void){
    int whichitem = random(0, ItemDr_champStack-1);
    int chance = ItemDr_championRewards[1][whichitem];
    if(ItemDr_Dice(chance))
        ItemDr_Spawn(ItemDr_championRewards[0][whichitem]);
}

function void ItemDr_MonsterDrop(int monsterClass)
{
// probability of dropping item
	//[Samu] Alright, im doing this just for the sake of refactoring!
	
  int chance = p_MonsterItem[monsterClass];

  if(CheckActorInventory(GetActorProperty(ActivatorTID(), APROP_TargetTID), "RuneFortune")){
      chance = chance + 10.0;
  }

  int spawn_fx = false; 
  if ((ItemDr_Dice(chance))){
    //log(s:"(ItemDr) Success, trying to drop stuff.");
    for (int i = 0; i < ITEMDROP_MAX; i++){
        chance = ItemDr_getChance(monsterClass, i);
        if(chance != 0.0){
            if (ItemDr_Dice(chance)){
                //log(s:"(ItemDr) An item has been dropped!.");
                ItemDr_Spawn(ItemDr_getItem(monsterClass, i));
                spawn_fx = true;
            }/*else{
                //log(s:"(ItemDr) No drop.");
            }*/
        }
        
    }
  }
  
    if(CheckActorInventory(GetActorProperty(ActivatorTID(), APROP_TargetTID), "RuneHealth")){
        chance = (5 + monsterClass*2) * 1.0;
        if(ItemDr_Dice(chance)){
            for(int bd = 0; bd < random(2,5); bd++){
                ItemDr_Spawn("HealthRune_BloodDrip");
            }
            spawn_fx = true;
        }
        
    }
    if(CheckActorInventory(GetActorProperty(ActivatorTID(), APROP_TargetTID), "RuneAmmunition")){
        chance = (5 + monsterClass*2) * 1.0;
        if(ItemDr_Dice(chance)){
            for(int as = 0; as < random(1,3); as++){
                ItemDr_Spawn("AmmunitionRune_Satchel");
            }
            spawn_fx = true;
        }
    }
    if(CheckActorInventory(GetActorProperty(ActivatorTID(), APROP_TargetTID), "RuneTemperance")){
        chance = (5 + monsterClass*2) * 1.0;
        if(ItemDr_Dice(chance)){
            // Should be an Ammo Satchel.
            for(int ars = 0; ars < random(2,4); ars++){
                ItemDr_Spawn("ArmorShard");
            }
            spawn_fx = true;
        }
    }
    if(spawn_fx)    PlaySound(ActivatorTID(), "misc/spawn");
}
