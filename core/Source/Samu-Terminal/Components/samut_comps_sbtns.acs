
/**	
	The StrButton (String Button) 
	Is a button with a string that it handles an action.
*/

#include "samut_cgnsf_sbtns.acs"

function int StrButton_Add(int x, int y, str string){
	StrButton_Setup (string);

	int id = Component_Allocate(STCOMP_SBTN, x, y, tmp[0], tmp[1]);
	if(id != -1){
		StrButton_SetDefaultProps(id);
		StrButton_setText(id,string);
		StrButton_setBack(id,tmp[2]);
	}
	
	return id;
}

function int StrButton_AddMid(int x, int y, str string){
	StrButton_Setup (string);
	return StrButton_Add(x - (fixedDiv(tmp[0], 2.0) - 2.0), y - (fixedDiv(tmp[1], 2.0) - 2.0), string);
}

function int StrButton_AddGrid(int grid, int row, int col,str string){
	return StrButton_Add(Grid_GetX(grid, row, col), Grid_GetY(grid, row, col), string);
}

function int StrButton_AddCard(int card, int cell, str string){
	return StrButton_Add(Card_GetX(card, cell), Card_GetY(card, cell), string);
}

function int StrButton_AddCardOff(int card, int cell, str string, int offx, int offy){
	return StrButton_Add(Card_GetX(card, cell) + offx, Card_GetY(card, cell) + offy, string);
}

function int StrButton_AddGridOff(int card, int row, int col, str string, int offx, int offy){
	return StrButton_Add(Grid_GetX(card, row, col) + offx, Grid_GetY(card, row, col) + offy, string);
}

function int StrButton_Dup(int copy, int x, int y){
	Component_Save(StrButton_getRect(copy));
	int id = Component_Allocate(STCOMP_SBTN, x, y, 0.0, 0.0);
	if(id != -1){
		Component_Load(id, StrButton_getRect(id));
		//StrButton_Setup(StrButton_getText(id));
		//StrButton_SetDimensions(id, tmp[0], tmp[1]);
	}
	return id;
}

function int StrButton_DupCard(int copy, int grid, int cell){
	return StrButton_Dup(copy, Card_GetX(grid, cell), Card_GetY(grid, cell));
}
function int StrButton_DupMid(int copy, int x, int y){
	return StrButton_Dup(copy, x - FixedDiv(StrButton_GetWidth(copy), 2.0), y - FixedDiv(StrButton_GetHeight(copy), 2.0));
}

function int StrButton_AddToPanelAbs (str string, int panel, int x, int y) {return StrButton_AddToPanelEX (string, panel, -1, x, y, true);}
function int StrButton_AddToPanelOff (str string, int panel, int offx, int offy) {return StrButton_AddToPanelEX (string, panel, -1, offx, offy, false);}
function int StrButton_AddToPanelPos (str string, int panel, int pos) 		{return StrButton_AddToPanelEX (string, panel, pos, 0.0, 0.0, false);}
function int StrButton_AddToPanel (str string, int panel) 					{return StrButton_AddToPanelEX (string, panel, -1, 0.0, 0.0, false);}
function int StrButton_AddToPanelEX (str string, int panel, int pos, int offx, int offy, bool absolute){
	int id = Component_Allocate(STCOMP_SBTN, 0.0, 0.0, 0.0, 0.0);
	if(id != -1){
		//StrButton_Setup(string);
		StrButton_SetDefaultProps(id);
		//StrButton_SetDimensions(id, tmp[0], tmp[1]);
		//StrButton_SetBack(id, tmp[2]);
		StrButton_setText(id,string);
		StrButton_SetParent(id, panel);
		
		Panel_AddCompEx(panel, STCOMP_SBTN, id, pos, offx, offy, absolute);
		//StrButton_setAligns(id,alX,alY);
	}
	return id;
}

function int StrButton_DupToPanelAbs (int copy, int panel, int x, int y) {return StrButton_DupToPanelEX (copy, panel, -1, x, y, true);}
function int StrButton_DupToPanelOff (int copy, int panel, int offx, int offy) {return StrButton_DupToPanelEX (copy, panel, -1, offx, offy, false);}
function int StrButton_DupToPanelPos (int copy, int panel, int pos) 	 {return StrButton_DupToPanelEX (copy, panel, pos, 0.0, 0.0, false);}
function int StrButton_DupToPanel (int copy, int panel) 				  {return StrButton_DupToPanelEX (copy, panel, -1, 0.0, 0.0, false);}
function int StrButton_DupToPanelEX(int copy, int panel, int pos, int offx, int offy, bool absolute){
	Component_Save(StrButton_getRect(copy));
	int id = Component_Allocate(STCOMP_SBTN, 0.0, 0.0, 0.0, 0.0);
	if(id != -1){
		Component_Load(id, StrButton_getRect(id));
		//StrButton_Setup(StrButton_getText(id));
		//StrButton_SetDimensions(id, tmp[0], tmp[1]);
		//StrButton_SetBack(id, tmp[2]);
		StrButton_SetParent(id, panel);
		Panel_AddCompEx(panel, STCOMP_SBTN, id, pos, offx, offy, absolute);
	}
	return id;
}

function void StrButton_SetPosToGridOff(int i, int grid, int row, int col, int offx, int offy){
	int x = Grid_GetX(grid, row, col);
	int y = Grid_GetY(grid, row, col);
	StrButton_setPosition(i, x + offx, y + offy);
}

function void StrButton_SetPosToCardOff(int i, int card, int cell, int offx, int offy){
	int x = Card_GetX(card, cell);
	int y = Card_GetY(card, cell);
	
	StrButton_setPosition(i, x + offx, y + offy);
}

function void StrButton_SetPosToGrid(int i, int grid, int row, int col){
	int x = Grid_GetX(grid, row, col);
	int y = Grid_GetY(grid, row, col);
	StrButton_setPosition(i, x, y);
}

function void StrButton_SetPosToCard(int i, int card, int cell){
	int x = Card_GetX(card, cell);
	int y = Card_GetY(card, cell);
	
	StrButton_setPosition(i, x, y);
}

function void StrButton_SetDefaultProps(int i){
		StrButton_setText(i,"");
		StrButton_setDescription(i, "");
		StrButton_setColor(i, CR_GRAY);
		StrButton_setShow(i, false);
		StrButton_setExecute(i, 0);	
		StrButton_setExeArgs(i,0,0,0);
		StrButton_setTag(i, -1);
		StrButton_setHudId(i, ST_HID_SBTNF + i);
		StrButton_setBackHudId(i, ST_HID_SBTNB + i);
		StrButton_setParent(i, -1);
}

function void StrButton_SetTextAdj(int id, str string){
	StrButton_Setup(string);
	StrButton_SetDimensions(id, tmp[0], tmp[1]);
	StrButton_SetBack(id, tmp[2]);
	StrButton_SetText(id, string);
}

function void StrButton_Setup (str string){
	Vars_ClearTmps();
	int w = 0;
	int h = 0;
	
	int charw = 0;
	int charh = 0;
	int chars = 0;
	string = StripColorCodes(string);
	for(int i = 0; i < StrLen(string); i++){
		int c = GetChar(string, i);
		if(c == '\n'){
			charh += 8;
			chars = 0;
		}else chars += CharWidth(c);
		if(charw < chars) charw = chars;
	}
	if(charw > 2){
		w = (charw/16)-1;
		if(charw%16 != 0) w++;
	}
	h = (charh/16);
	if(charh%16 != 0) h++;
	
	StrButton_GenerateBack(w, h);
	
	tmp[0] = (32.0 + (16.0*w));
	tmp[1] = (32.0 + (16.0*h));
	
}

function void StrButton_GenerateBack(int w, int h){
	str btnstring = "A";
	
	//print(s:"w: ", d:w, s:", h: ", d:h);
	
	if(w != 0){
		for(int j = 0; j < w; j++){
			btnstring = StrAdd(btnstring, "B");
		}
	}
	btnstring = StrAdd(btnstring, "C");
	
	if(w != 0 && h != 0){
		for(int y = 0; y < h; y++){
		btnstring = StrAdd(btnstring, "\nD");
			for(int x = 0; x < w; x++){
				btnstring = StrAdd(btnstring, "E");
			}
		btnstring = StrAdd(btnstring, "F");
		}
	}
	
	btnstring = StrAdd(btnstring, "\nG");
	if(w != 0){
		for(int k = 0; k < w; k++){
			btnstring = StrAdd(btnstring, "H");
		}
	}

	btnstring = StrAdd(btnstring, "I");
	
	tmp[2] = btnstring;
}