/**
*
* 	<samut_vars.acs> 
* 	Constants and Variables module!
*	You can kinda customize this part by adding your variables.
*	Just stay away from the important ones.
*
**/

#libDefine ST_VER "1.0"

#libDefine STSET_WIDTH 640.0
#libDefine STSET_HEIGHT 480.0
#libDefine STSET_BACK "BG"

//#libDefine STSET_BGCYCLE true
//#libDefine STSET_TILED 64.0


// Constants

//	HID's (Hud ids), If the hud-id conflicts, 
//	just add a 0 on the right side, and do it for everyone.

#LibDefine ST_NCOMPS 500
#libDefine ST_HID_GLOBAL 10000

#LibDefine ST_HID_BACK 			ST_HID_GLOBAL*ST_HID_GLOBAL
#LibDefine ST_HID_PAN_BACKG 		ST_HID_GLOBAL + ST_NCOMPS*40
#LibDefine ST_HID_PAN_TITLE 		ST_HID_GLOBAL + ST_NCOMPS*35
#LibDefine ST_HID_PAN_FOREG 		ST_HID_GLOBAL + ST_NCOMPS*30
#LibDefine ST_HID_IMG 			ST_HID_GLOBAL + ST_NCOMPS*25
#LibDefine ST_HID_SBTNB 		ST_HID_GLOBAL + ST_NCOMPS*20
#LibDefine ST_HID_SBTNF 		ST_HID_GLOBAL + ST_NCOMPS*15
#LibDefine ST_HID_IBTN 	 		ST_HID_GLOBAL + ST_NCOMPS*10
#LibDefine ST_HID_LBL 			ST_HID_GLOBAL + ST_NCOMPS*5

#LibDefine ST_HID_PROMPT_BACK 	ST_HID_GLOBAL + 21
#LibDefine ST_HID_PROMPT_SCRBTN_DOWN 	ST_HID_GLOBAL + 20
#LibDefine ST_HID_PROMPT_SCRBTN_UP 		ST_HID_GLOBAL + 19
#LibDefine ST_HID_PROMPT_SCRBTN_RIGHT 	ST_HID_GLOBAL + 18
#LibDefine ST_HID_PROMPT_SCRBTN_LEFT 	ST_HID_GLOBAL + 17
#LibDefine ST_HID_PROMPT_TITLE  ST_HID_GLOBAL + 16
#LibDefine ST_HID_PROMPT_BTNYES ST_HID_GLOBAL + 15
#LibDefine ST_HID_PROMPT_BTNNO  ST_HID_GLOBAL + 14
#LibDefine ST_HID_PROMPT_BTNOK  ST_HID_GLOBAL + 13
#LibDefine ST_HID_PROMPT_LBL    ST_HID_GLOBAL + 12

#LibDefine ST_HID_TOAST_BACK	ST_HID_GLOBAL + 11
#LibDefine ST_HID_TOAST_TEXT 	ST_HID_GLOBAL + 10

#LibDefine ST_HID_HILI      	ST_HID_GLOBAL + 9
#LibDefine ST_HID_TOOLTIP      	ST_HID_GLOBAL + 8

#LibDefine ST_HID_CURSOR ST_HID_GLOBAL

// Component Properties (Dont touch that.)
#LibDefine ST_CPROP0 0
#LibDefine ST_CPROP1 1
#LibDefine ST_CPROP2 2
#LibDefine ST_CPROP3 3
#LibDefine ST_CPROP4 4
#LibDefine ST_CPROP5 5
#LibDefine ST_CPROP6 6
#LibDefine ST_CPROP7 7
#LibDefine ST_CPROP8 8
#LibDefine ST_CPROP9 9
#LibDefine ST_CPROP10 10
#LibDefine ST_CPROP11 11
#LibDefine ST_CPROP12 12
#LibDefine ST_CPROP13 13
#LibDefine ST_CPROP14 14
#LibDefine ST_CPROP15 15
#LibDefine ST_CPROP16 16
#LibDefine ST_CPROP17 17
#LibDefine ST_CPROP18 18
#LibDefine ST_CPROP19 19
#LibDefine ST_CPROP20 20
#LibDefine ST_CPROP21 21
#LibDefine ST_CPROP22 22
#LibDefine ST_CPROP23 23
#LibDefine ST_CPROP24 24
#LibDefine ST_CPROP25 25
#LibDefine ST_CPROP26 26
#LibDefine ST_CPROP27 27
#LibDefine ST_CPROP28 28
#LibDefine ST_CPROP29 29
#LibDefine ST_CPROP30 30
#LibDefine ST_CPROP31 31
#LibDefine ST_CPROP32 32
#LibDefine ST_CPROP33 33
#LibDefine ST_CPROP34 34
#LibDefine ST_CPROP35 35
#LibDefine ST_CPROP36 36
#LibDefine ST_CPROP37 37
#LibDefine ST_CPROP38 38
#LibDefine ST_CPROP39 39

#libdefine ST_PSTR_STR 0
#libdefine ST_PSTR_INT 1
#libdefine ST_PSTR_BOOL 2

#LibDefine ST_Enabled  1
#LibDefine ST_Disabled 0
#LibDefine ST_Show 1
#LibDefine ST_Hide 0

#LibDefine ST_CompAlign_North 1
#LibDefine ST_CompAlign_South 2
#Libdefine ST_CompAlign_East 3
#LibDefine ST_CompAlign_West 4
#LibDefine ST_CompAlign_Center 5

//OpExecute Constants!
/*
	Positive Values, Executions on the client. (No need for NET script.)
	Negative Values, Executions on the server. (Needs a NET script.)
	Touch it if you want to handle more actions.
*/

#libdefine STEXE_RUNESHOP_BUYTIER		58
#libdefine STEXE_RUNESHOP_GIVETIER		-43
#libdefine STEXE_RUNESHOP_BUY		56
#libdefine STEXE_RUNESHOP_GET		57
#libdefine STEXE_RUNESHOP_GIVE		-42
#libdefine STEXE_RUNESHOP_HOVER 	55

#libdefine STEXE_STIMUP_BUY			51
#libdefine STEXE_STIMUP_GIVE		-41
#libdefine STEXE_STIMUP_HOVER 		52

#libdefine STEXE_PLAYUP_ASK		47
#libdefine STEXE_PLAYUP_SET		48
#libdefine STEXE_PLAYUP_GET		-40
#libdefine STEXE_PLAYUP_SETDESC		46
#libdefine STEXE_PLAYUP_BTNHOVER 	45

#libdefine STEXE_UPWEPOPENUPS 71
#Libdefine STEXE_UPGPAGEWEPS 70
#libdefine STEXE_UPGPAGECAT 42
#libdefine STEXE_UPGPAGEDESC 40

#libdefine STEXE_CMDEXIT 			-31
#libdefine STEXE_CMDDEPLOY 			33
#libdefine STEXE_CMDSUPPORT 		32
#libdefine STEXE_CMDSUPPORT_MARK 	-35
#libdefine STEXE_CMDRESEARCH 		31
#libdefine STEXE_CMDBUILD 			30
#libdefine STEXE_CMDEXECUTE 		-30
#libdefine STEXE_CMDEVENT_DOIT		-50
#libdefine STEXE_CMDEVENT_CHECK 	50
#libdefine STEXE_CMDBTNDESC 		25
#libdefine STEXE_CMDCAT 			26
#libdefine STEXE_CMDCAT2 			27

#libdefine STEXE_BUYMECHTANK 19
#libdefine STEXE_GETMECHTANK -9
#libdefine STEXE_UPGMECHTANK 20
#libdefine STEXE_GETMECHUPG -11
#libdefine STEXE_ENTERMECHTANK -10

#libdefine STEXE_POWBUY 18

#LibDefine STEXE_HOWKIND 7
#LibDefine STEXE_HOWRUDE 6

#libDefine STEXE_ITEMGET -8
#libDefine STEXE_ITEMBUY 17

#libDefine STEXE_WEPRC -7
#libDefine STEXE_MOVERC 36
#libDefine STEXE_MSGRC 16
#libDefine STEXE_ASKRC 15

#libDefine STEXE_BUYWP_PDESC 8
#libDefine STEXE_BUYWP_PSHOW 35
#libDefine STEXE_BUYWP_MOVEWEP 60
#libDefine STEXE_BUYWP_MOVEWPPAGE 61
#libdefine STEXE_BUYWP 9
#libdefine STEXE_GETWP 10
#libdefine STEXE_GIVEWP -5

#libdefine STEXE_ASKUP 13
#libdefine STEXE_MSGUP 14
#libdefine STEXE_GETUP -6
#libdefine STEXE_PANEL_SCROLL		1000

//DoNotTouch_Start.
#LibDefine STEXE_ASK 5
#LibDefine STEXE_NO 4
#LibDefine STEXE_YES 3
#LibDefine STEXE_OKAY 2
#LibDefine STEXE_GTCAT 1
#LibDefine STEXE_OPEN -1
#LibDefine STEXE_CLOSE -2
#LibDefine STEXE_SYSOFF -3
//DoNotTouch_End.
#LibDefine STEXE_SAYHI -4
#LibDefine STEXE_SELECT 99

#libdefine FIRE1 BT_ATTACK
#libdefine FIRE2 BT_ALTATTACK

#libdefine STLAYOUT_SAVES 100

//		Card Layout stuff
#libdefine STGRID_PROPS 7

#libdefine STGRID_PROP_X 0
#libdefine STGRID_PROP_Y 1
#libdefine STGRID_PROP_CSX 2
#libdefine STGRID_PROP_CSY 3
#libdefine STGRID_PROP_ROWS 4
#libdefine STGRID_PROP_COLS 5
#libdefine STGRID_PROP_HIC 6
//		Card Layout stuff
#libdefine STCARD_PROPS 5

#libdefine STCARD_PROP_X 0
#libdefine STCARD_PROP_Y 1
#libdefine STCARD_PROP_STEP 2
#libdefine STCARD_PROP_CELLS 3
#libdefine STCARD_PROP_ORXY 4

//		Counts all of the components.
#libdefine STCOMP_IBTN 0
#libdefine STCOMP_LBL 1
#libdefine STCOMP_IMG 2
#libdefine STCOMP_SBTN 3

#libdefine STCOMP_CURSOR 0
#libdefine STCOMP_PROMPT 1
#libdefine STCOMP_TOAST 2
//		Just to track the array limits.
#libdefine STVARS_COMPCOUNT 4
#libdefine STVARS_COMPCOUNT1 3
#libdefine STVARS_TMP 10

#libdefine STTAGS_ALPHA 0
#libdefine STTAGS_LAST 1
#libdefine STTAGS_NOW 2

// Variables

//Card Helper stuff.
int cardproptop;
int cardpropsave[STLAYOUT_SAVES][4];
int cardpos[STLAYOUT_SAVES][100][2];


// Temporary Variables.
int tmp[STVARS_TMP]; 

//Grid Helper stuff.
int gridproptop;
int gridpropsave[STLAYOUT_SAVES][7];
int gridpos[STLAYOUT_SAVES][500][2];

int comp_propsave[ACSUTILS_RECTLIB_USERVARS]; 
//	Component Counter
int comp_count[STVARS_COMPCOUNT];

//		The array of components 
//		(Here it save's the rectangle id given from ACSRECT)
int comp_rects_many[STVARS_COMPCOUNT][ST_NCOMPS];
int comp_rects_once[STVARS_COMPCOUNT1];

#libdefine STPANEL_COUNT_CONTENT 100
#libdefine STPANEL_COUNT_INDEX 50
#libdefine STPANEL_COUNT_SCROLLBTNS 4
#libdefine STPANEL_COUNT_PROPS 7
#libdefine STPANEL_ANCHOR_CENTER 0
#libdefine STPANEL_ANCHOR_TOP 1
#libdefine STPANEL_ANCHOR_BOTTOM 2
#libdefine STPANEL_ANCHOR_LEFT 3
#libdefine STPANEL_ANCHOR_RIGHT 4

#libdefine STPANEL_COMPDATA_TYPE 0
#libdefine STPANEL_COMPDATA_ID 1
#libdefine STPANEL_COMPDATA_ISABSOLUTE 2
#libdefine STPANEL_COMPDATA_SHOWSTATUS 3
#libdefine STPANEL_COMPDATA_ISANCHORED 4
#libdefine STPANEL_COMPDATA_ANCHORX 5
#libdefine STPANEL_COMPDATA_ANCHORY 6

int panel_count = 0;
int panels[STPANEL_COUNT_INDEX];
int panels_scrollbuttons[STPANEL_COUNT_INDEX][STPANEL_COUNT_SCROLLBTNS];
int panels_comps_index[STPANEL_COUNT_INDEX][STPANEL_COUNT_CONTENT][STPANEL_COUNT_PROPS];

#libdefine STCURSOR_HOVER_COMP 		0
#libdefine STCURSOR_HOVER_COMPTYPE 	STCURSOR_HOVER_COMP+1
#libdefine STCURSOR_HOVER_LAST  	STCURSOR_HOVER_COMPTYPE+1
int cursor_hover[STCURSOR_HOVER_LAST+1];

//To do stuff with the components.

// define these constants to clean out some space with the map variables.
#libdefine STPROMPT_DATA_OKBTN 0
#libdefine STPROMPT_DATA_YESBTN STPROMPT_DATA_OKBTN+1
#libdefine STPROMPT_DATA_NOBTN STPROMPT_DATA_YESBTN+1
#libdefine STPROMPT_DATA_LABEL STPROMPT_DATA_NOBTN+1
#libdefine STPROMPT_DATA_PANEL STPROMPT_DATA_LABEL+1
#libdefine STPROMPT_DATA_ONTRUE_EXECUTE STPROMPT_DATA_PANEL+1
#libdefine STPROMPT_DATA_ONTRUE_EXEARG1 STPROMPT_DATA_ONTRUE_EXECUTE+1
#libdefine STPROMPT_DATA_ONTRUE_EXEARG2 STPROMPT_DATA_ONTRUE_EXEARG1+1
#libdefine STPROMPT_DATA_ONTRUE_EXEARG3 STPROMPT_DATA_ONTRUE_EXEARG2+1
#libdefine STPROMPT_DATA_ONFALSE_EXECUTE STPROMPT_DATA_ONTRUE_EXEARG3+1
#libdefine STPROMPT_DATA_ONFALSE_EXEARG1 STPROMPT_DATA_ONFALSE_EXECUTE+1
#libdefine STPROMPT_DATA_ONFALSE_EXEARG2 STPROMPT_DATA_ONFALSE_EXEARG1+1
#libdefine STPROMPT_DATA_ONFALSE_EXEARG3 STPROMPT_DATA_ONFALSE_EXEARG2+1
#libdefine STPROMPT_DATA STPROMPT_DATA_ONFALSE_EXEARG3+1
int prompt_data[STPROMPT_DATA];

// Input bind variables
int input_bind_count = 0;
int input_bind[20][6];
int input_selectcomp_count = 0;
int input_selectcomp_group = 0;
int input_selectcomp[50][3];

// Core variables.
int pagetags[5];
str imgbg = STSET_BACK;
int exitResult = 0;
int msgs[2];

#LibDefine STMSGS_LOGIN 0
#LibDefine STMSGS_LOGOUT 1

// Common components for Shotgun frenzy plus, like the page title and the credit and upgrade wallet.
#Libdefine SF_SFCOMPS_TITLE 			0
#Libdefine SF_SFCOMPS_WALLET_CREDITS 	SF_SFCOMPS_TITLE+1
#Libdefine SF_SFCOMPS_WALLET_UPS 		SF_SFCOMPS_WALLET_CREDITS+1

int sfpcomps[SF_SFCOMPS_WALLET_UPS+1];

//Temporal Variables
//int w=0,h=0; 

function void Vars_SetMessage(int id, int msg){
	msgs[id] = msg;
}

function int Vars_Mid_Wid(void){
	return fixedDiv(STSET_WIDTH, 2.0);
}


function int Vars_Mid_Hei(void){
	return fixedDiv(STSET_HEIGHT, 2.0);
}

function void Vars_ClearTmps(void){
	for(int i = 0; i < STVARS_TMP; i++){
		tmp[i] = 0;
	}
}

function void Vars_ClearCompCounts(void){
	int i, j;
	for (i = 0; i < STVARS_COMPCOUNT; i++){
		comp_count[i] = 0;
		for (j = 0; j < ST_NCOMPS; j++){
			comp_rects_many[i][j] = 0;
		}
		comp_rects_once[i] = 0;
	}
	panel_count = 0;
	for (i = 0; i < STPANEL_COUNT_INDEX; i++){
		panels[i] = 0;
		for (j = 0; j < STPANEL_COUNT_SCROLLBTNS; j++){
			panels_scrollbuttons[i][j] = 0;
		}
		for (j = 0; j < STPANEL_COUNT_CONTENT; j++){
			panels_comps_index[i][j][STPANEL_COMPDATA_TYPE] = -1;
			panels_comps_index[i][j][STPANEL_COMPDATA_ID] = -1;
			panels_comps_index[i][j][STPANEL_COMPDATA_ISABSOLUTE] = -1;
			panels_comps_index[i][j][STPANEL_COMPDATA_SHOWSTATUS] = false;
			panels_comps_index[i][j][STPANEL_COMPDATA_ISANCHORED] = -1;
			panels_comps_index[i][j][STPANEL_COMPDATA_ANCHORX] = -1;
			panels_comps_index[i][j][STPANEL_COMPDATA_ANCHORY] = -1;
		}
	}
}

function void Vars_PrintVersion(void){
	print(s:"You're using the v", s:ST_VER, s:" of Samu Terminal.");
}

function str langstring(str lang, int randme){
	int string;
	if(randme <= 1) string = StrParam(l:lang);
	else string = StrParam(l:StrParam(s:lang, d:random(1, randme)));

	string = StrReplace(string, "%p", StrParam(n:Playername(playerNumber())));
	return string;
}

// SFPlus Stuff
function int SFPlus_getPlayCredits(void){
	return CheckInventory("p_Money");
}

function int SFPlus_getPlayUPts(void){
	return CheckInventory("p_UpPoint");
}

Function int SFPlus_getTeamCredits(void){
	return CheckInventory("p_team_credits");
}

// Font measures for teh DBIGFONT Font. (By jimmy of coruse :D)

function int StringWidth(str wut){
	int res = 0;
		str stringy = StripColorCodes(wut);
		for(int i = 0; i < StrLen(stringy); i++)
		{
			res += DBIGFONT_CharWidth(getChar(stringy, i));
		}
	return res;
}

function int DBIGFONT_CharWidth(int c){
	int res = 0;
	switch(c){
		
		case 'I': case 'i':
		case ' ':
			res = 5;
		break;
		case 'L': case 'l':
			res = 9;
		break;
		case 'G': case 'g':
		case 'H': case 'h':
		case 'M': case 'm':
		case 'O': case 'o':
		case 'Q': case 'q':
		case 'W': case 'w':
			res = 15;
		break;
		default: 
		res = 13;
		break;
	}
	return res;
}

function int CharHeight(int c){
	int res = 0;
	switch(c){
		case 'Q': case 'q':
			res = 15;
		break;
		default: 
		res = 13;
		break;
	}
	return res;
}
//Wish i could get a magic function to measure the charsize in pixels for any font.