int armitm_vars[200];

#define ArmItmPage_NCOMPGROUP 6
#define ArmItmPage_NPRIVARS 30

function void ArmItmPage_SaveGroup(int up, int id, int comp){
	ArmItm_vars[ArmItmPage_NCOMPGROUP * up + ArmItmPage_NPRIVARS + (id-1)] = comp;
}

function int ArmItmPage_LoadGroup(int up, int id){
	return ArmItm_vars[ArmItmPage_NCOMPGROUP * up + ArmItmPage_NPRIVARS + (id-1)];
}

function void ArmItmPage_Update(int pageTag){
	setPageTitle(pageTag, "More items", CR_GOLD);
	if(isOnTheSamePage(pageTag)){
		for(int i = 0; i < fp_LastArmoryItem; i++){
			ArmItmPage_UpdateItem(fp_sell_on_armory[i]);
		}
	}
	else;
}


function void ArmItmPage_Init(int pageTag){
	//ArmItemsPage_InitGrid(285.0, 50.0);
	Grid_SetPosition(285.0, 50.0);
	Grid_SetCellSize(50.0, 38.0);
	Grid_SetDimensions(8,2);
	armitm_vars[0] = Grid_Generate();
	
	armitm_vars[1] = pageTag;
	
	for(int i = 0; i < fp_LastArmoryItem; i++){
		ArmItmPage_AddItemOption(i % 16, fp_sell_on_armory[i]);
	}
}

function void ArmItmPage_AddItemOption(int pos, int itemId){
	int i;
	int y = (pos / 8) + 1;
	int x = (pos % 8) + 1;
	int offx = cond(y <= 1, -8.0, 40.0);
	int ix = (pos % 8) + 1;
	int grid = armitm_vars[0];
	
	int align = cond(y <= 1,HUD_ALIGN_RIGHT, HUD_ALIGN_LEFT);
	int pagetag = armitm_vars[1];
	int color;
	
	int prop0, prop1, prop2, prop3, prop4;
	prop0 = Item_GetName(itemid);
	prop1 = Item_GetIcon(itemid);
	prop2 = Item_GetDesc(itemid);
	prop3 = strParam(d:Item_GetPrice(itemId), s:" $");
	prop4 = strParam(d:CheckInventory(Item_getActor(itemId)), s:"/", d:Item_getMax(itemId) );
	//[Samu] recycling biatch!
	
	if(Item_getType(itemid) == FP_ITEM_T_DEPLOY) color = cr_Orange;
	else color = cr_cyan;
	
	i = Label_AddGridOff(grid, x, y, offx, 4.0); 
	Label_setText	(i, prop0);
	Label_setFont	(i,"StatBigs");
	Label_setAligns	(i, align, HUD_ALIGN_TOP);
	Label_setColor	(i, color);
	Label_setTag	(i, pageTag);
	Component_save(Label_getRect(i));
	ArmItmPage_SaveGroup(itemId, 0, i);
	
	i = Label_DupGridOff(grid, x, y, offx, 16.0); 
	Label_setText(i, prop2);
	Label_setFont(i,"Confont");
	Label_setWrapWidth(i, 250);
	ArmItmPage_SaveGroup(itemId, 1, i);
	
	i = Label_DupGridOff(grid, x, y, offx, 30.0); 
	Label_setText(i, prop3);
	Label_setFont(i,"Confont");
	Label_setColor(i, CR_GREEN);
	ArmItmPage_SaveGroup(itemId, 2, i);
	
	i = Label_DupGridOff(grid, x, y, 16.0, 30.0); 
	Label_setFont(i,"Confont");
	Label_setText(i, prop4);
	Label_setAligns(i, HUD_ALIGN_CENTER, HUD_ALIGN_TOP);
	ArmItmPage_SaveGroup(itemId, 3, i);
	
	i = ImgButton_AddGrid(grid, ix, y, 32.0, 32.0); 
	ImgButton_setImage(i, prop1);
	ImgButton_setTag(i, pageTag);
	ImgButton_setExecute(i, STEXE_ITEMBUY);
	ImgButton_setArgs(i, itemId, 0 ,0);
	ArmItmPage_SaveGroup(itemId, 4, i);
	
}

function void ArmItmPage_UpdateItem(int itemId){
	int i = ArmItmPage_LoadGroup(itemid, 3);
	int j = ArmItmPage_LoadGroup(itemid, 2);
	int k = ArmItmPage_LoadGroup(itemid, 4);
	int price = Item_getPrice(itemid);
	int quantity = Checkinventory(Item_getActor(itemid));
	int maximum = Item_getMax(itemid);
	
	str button = Item_getIcon(itemid);
	bool caniafford = GetPlayCredits() >= price;
	
	if(quantity == maximum)
		Label_setText(i, "Max!");
	else
		Label_setText(i, StrParam(d:quantity, s:"/",d:maximum));
		
	Label_setColor(j, cond(caniafford,   CR_GREEN, CR_RED));
	ImgButton_SetImage(k, cond(caniafford, button, "BTNDEN")); 
}