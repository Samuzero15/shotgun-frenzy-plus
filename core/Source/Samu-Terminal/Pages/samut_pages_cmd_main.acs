
int cmdpage_vars[500];
#define CMDPAGE_NCOMPGROUP 2
#define CMDPAGE_NPRIVARS 5
//Inner page index = 0

function void CMDPage_Update(void){
	setPageTitle_Alpha("Commander mode", CR_CYAN);
	
		ShowByAlphaTag();
		
	if(comphover != lasthover){
		Label_SetText(cmdpage_vars[1], "");
		Label_SetText(cmdpage_vars[2], "");
	}
	
	Label_SetText(cmdpage_vars[3], strparam(s:"T.C: ", d:getTeamCredits(), s:" $"));
	Label_SetText(cmdpage_vars[4], 
		strparam(s:"Hostile Counter",
		s:"\nSector 1 : ", d:thingcount(0, 111), 
		s:"\nSector 2 : ", d:thingcount(0, 112), 
		s:"\nSector 3 : ", d:thingcount(0, 113), 
		s:"\nMain base: ", d:thingcount(0, 114)));
	
	CMDBut_UpdateConds();
	
	for(int i = 0; i < FP_COM_BUTTONS; i++){
		CMDPage_UpdateButton(i);
	}
}

//This will initialize the page components.
function void CMDPage_Init(void){
	int i;
	
	Grid_SetPosition(508.0, 369.0);
	Grid_SetDimensions(3, 4);
	Grid_SetCellSize(32.0, 32.0);
	int grid = Grid_Generate();
	cmdpage_vars[0] = grid;
	
	pagetags[STTAGS_NOW] = 11;
	
	i = Image_Add(0.0, 0.0, "HUDCOM");
	Image_setTag(i, pagetags[STTAGS_ALPHA]);
	
	i = Label_Add(20.0, 420.0); // Button Title.
	Label_setTag(i, pagetags[STTAGS_ALPHA]);
	Label_setColor(i, CR_YELLOW);
	Label_setFont(i, "STATBIGS");
	Label_setAligns(i, HUD_ALIGN_LEFT, HUD_ALIGN_Center);
	cmdpage_vars[1] = i;
	
	i = Label_Add(20.0, 434.0); // Description
	Label_setTag(i, pagetags[STTAGS_ALPHA]);
	Label_setColor(i, CR_WHITE);
	Label_setFont(i, "CONFONT");
	Label_setAligns(i, HUD_ALIGN_LEFT, HUD_ALIGN_TOP);
	cmdpage_vars[2] = i;
	
	i = Label_Add(490.0, 340.0); // Money counter.
	Label_setTag(i, pagetags[STTAGS_ALPHA]);
	Label_setColor(i, CR_WHITE);
	Label_setFont(i, "STATBIGS");
	Label_setAligns(i, HUD_ALIGN_LEFT, HUD_ALIGN_TOP);
	cmdpage_vars[3] = i;
	
	i = Label_Add(490.0, 295.0); // Demon counter.
	Label_setTag(i, pagetags[STTAGS_ALPHA]);
	Label_setColor(i, CR_WHITE);
	Label_setFont(i, "CONFONT");
	Label_setAligns(i, HUD_ALIGN_LEFT, HUD_ALIGN_TOP);
	cmdpage_vars[4] = i;
	
	i = 11;
	int m = 11;
	int p = 0;
	int cmd = STEXE_CLOSE;
	//Main category
	CMDPage_MakeLinkButton(i, 1, 1, FP_CB_BUILD, 	12);
	CMDPage_MakeLinkButton(i, 1, 2, FP_CB_UPGRADE, 13);
	CMDPage_MakeLinkButton(i, 1, 3, FP_CB_SUPPORT, 18);
	CMDPage_MakeLinkButton(i, 1, 4, FP_CB_DEPLOY, 	20);
	 //Nuke button!
	 CMDPage_MakeLinkButton(i, 3, 1, FP_CB_NUKE, 22);
		CMDPage_MakeButton(22, 3, 1, FP_CB_NUKE_IT_NOW);
		CMDPage_MakeReturnButton(22, m);
	CMDPAGE_MakeExitButton(i);
	
	i = 12;
	//Build category
	CMDPage_MakeButton(i, 1, 1, FP_CB_BUILD_GENLAB);
	CMDPage_MakeButton(i, 1, 2, FP_CB_BUILD_ARMORY);
	CMDPage_MakeButton(i, 1, 3, FP_CB_BUILD_MECHFA);
	CMDPage_MakeButton(i, 1, 4, FP_CB_BUILD_REFINE);
	CMDPage_MakeButton(i, 2, 1, FP_CB_BUILD_MARCOM);
	CMDPage_MakeButton(i, 2, 2, FP_CB_BUILD_NUKESY);
	CMDPage_MakeReturnButton(i, m);
	
	i = 13, p = 14;
	//Research category
	CMDPage_MakeLinkButton(i, 1, 1, FP_CB_UPGRADE_GENLAB, p);
		CMDPage_MakeButton(p, 1, 1, FP_CB_UPGRADE_GENLAB_HEALTH2);
		CMDPage_MakeButton(p, 1, 1, FP_CB_UPGRADE_GENLAB_HEALTH1);
		CMDPage_MakeButton(p, 1, 2, FP_CB_UPGRADE_GENLAB_SPEEDB);
		CMDPage_MakeButton(p, 1, 3, FP_CB_UPGRADE_GENLAB_ARMOR);
		CMDPage_MakeButton(p, 1, 4, FP_CB_UPGRADE_GENLAB_RESISB);
		CMDPage_MakeButton(p, 2, 1, FP_CB_UPGRADE_GENLAB_REGENB);
		CMDPage_MakeReturnButton(p, i);
	p = 15;
	CMDPage_MakeLinkButton(i, 1, 2, FP_CB_UPGRADE_ARMORY, p);
		CMDPage_MakeButton(p, 1, 1, FP_CB_UPGRADE_ARMORY_ARMS2);
		CMDPage_MakeButton(p, 1, 1, FP_CB_UPGRADE_ARMORY_ARMS1);
		CMDPage_MakeButton(p, 1, 2, FP_CB_UPGRADE_ARMORY_BOOMRN);
		CMDPage_MakeButton(p, 1, 3, FP_CB_UPGRADE_ARMORY_AMMOBP);
		CMDPage_MakeReturnButton(p, i);
	//CMDPage_MakeButton(13, 1, 3, "CC03", STEXE_CLOSE, 0);
	p = 16;
	CMDPage_MakeLinkButton(i, 1, 3, FP_CB_UPGRADE_REFINE, p);
		CMDPage_MakeButton(p, 1, 1,  FP_CB_UPGRADE_REFINE_PUMP1);
		CMDPage_MakeButton(p, 1, 2,  FP_CB_UPGRADE_REFINE_PUMP2);
		CMDPage_MakeReturnButton(p, i);
	p = 17;
	CMDPage_MakeLinkButton(i, 1, 4, FP_CB_UPGRADE_MARCOM, p);
		CMDPage_MakeButton(p, 1, 1, FP_CB_UPGRADE_MARCOM_ADVSYS);
		CMDPage_MakeButton(p, 1, 2, FP_CB_UPGRADE_MARCOM_AIRSUP);
		CMDPage_MakeButton(p, 1, 3, FP_CB_UPGRADE_MARCOM_IONCAN);
		CMDPage_MakeButton(p, 1, 4, FP_CB_UPGRADE_MARCOM_CPULSE);
		CMDPage_MakeReturnButton(p, i);
	CMDPage_MakeReturnButton(i, m);
	
	// Support Button
	i = 18, p = 19;
	CMDPage_MakeLinkButton(i, 1, 1, FP_CB_SUPPORT_AIRSTK, 25);
		CMDPage_MakeButton(25, 1, 1, FP_CB_SUPPORT_AIRSTK_POINT);
		CMDPage_MakeButton(25, 1, 2, FP_CB_SUPPORT_AIRSTK_LINE_1);
		CMDPage_MakeButton(25, 1, 3, FP_CB_SUPPORT_AIRSTK_LINE_2);
		CMDPage_MakeButton(25, 1, 4, FP_CB_SUPPORT_AIRSTK_WAVES_1);
		CMDPage_MakeButton(25, 1, 4, FP_CB_SUPPORT_AIRSTK_WAVES_3);
		CMDPage_MakeButton(25, 1, 4, FP_CB_SUPPORT_AIRSTK_WAVES_5);
		CMDPage_MakeButton(25, 3, 1, FP_CB_SUPPORT_AIRSTK_EXE);
		CMDPage_MakeButton(25, 3, 2, FP_CB_SUPPORT_AIRSTK_CLEAR);
		CMDPage_MakeReturnButton(25, i);
	CMDPage_MakeLinkButton(i, 1, 2, FP_CB_SUPPORT_CPULSE, p);
		CMDPage_MakeButton(p, 1, 1, FP_CB_SUPPORT_CPULSE_HEAL);
		CMDPage_MakeButton(p, 1, 2, FP_CB_SUPPORT_CPULSE_CRIPPLE);
		CMDPage_MakeButton(p, 1, 3, FP_CB_SUPPORT_CPULSE_HALT);
		CMDPage_MakeReturnButton(p, i);
	CMDPage_MakeButton(i, 1, 4, FP_CB_SUPPORT_IONCAN);
	CMDPage_MakeButton(i, 2, 1, FP_CB_SUPPORT_DROPMONEY);
	
	CMDPage_MakeButton(i, 2, 2, FP_CB_SUPPORT_MARK_ATTACK);
	CMDPage_MakeButton(i, 2, 3, FP_CB_SUPPORT_MARK_DEFEND);
	CMDPage_MakeButton(i, 2, 4, FP_CB_SUPPORT_MARK_DEPLOY);
	CMDPage_MakeButton(i, 3, 1, FP_CB_SUPPORT_MARK_REGROUP);
	CMDPage_MakeButton(i, 3, 2, FP_CB_SUPPORT_MARK_CLEAR);
	CMDPage_MakeReturnButton(i, m);
	
	//Deploy Button.
	i = 20, p = 21;
	CMDPage_MakeButton(i, 1, 1, FP_CB_DEPLOY_MINEFIELD);
	CMDPage_MakeButton(i, 1, 2, FP_CB_DEPLOY_DISP_HEALTH);
	CMDPage_MakeButton(i, 1, 3, FP_CB_DEPLOY_DISP_AMMO);
	CMDPage_MakeButton(i, 1, 4, FP_CB_DEPLOY_BARRIER);
	CMDPage_MakeLinkButton(i, 3, 1, FP_CB_DEPLOY_TURRET, p);
		CMDPage_MakeButton(p, 1, 1, FP_CB_DEPLOY_TURRET_BULLET);
		CMDPage_MakeButton(p, 1, 2, FP_CB_DEPLOY_TURRET_SHOTGUN);
		CMDPage_MakeButton(p, 1, 3, FP_CB_DEPLOY_TURRET_ROCKET);
		CMDPage_MakeButton(p, 1, 4, FP_CB_DEPLOY_TURRET_PLASMA);
		CMDPage_MakeButton(p, 2, 1, FP_CB_DEPLOY_TURRET_CHAINGUN);
		CMDPage_MakeButton(p, 2, 2, FP_CB_DEPLOY_TURRET_TESCOL);
		CMDPage_MakeButton(p, 2, 3, FP_CB_DEPLOY_TURRET_FLAMER);
		
		CMDPage_MakeReturnButton(p, i);
	CMDPage_MakeReturnButton(i, m);
}

function void CMDPage_MakeLinkButton(int tag, int row, int col, int btndata, int destTag){
	CMDPage_MakeButtonEX(tag, row, col, btndata, STEXE_CMDCAT, destTag);
}

function void CMDPage_MakeExitButton(int tag){
	CMDPage_MakeButtonEX(tag, 3, 4, FP_CB_EXIT, STEXE_CMDEXIT, 0);
}

function void CMDPage_MakeReturnButtonExe(int tag, int returntag, int exe_return, int exe_exit){
	CMDPage_MakeButtonEX(tag, 3, 4, FP_CB_RETURN, exe_return, returntag);
	CMDPage_MakeButtonEX(tag, 3, 3, FP_CB_EXIT, exe_exit, 0);
}

function void CMDPage_MakeReturnButton(int tag, int returntag){
	CMDPage_MakeButtonEX(tag, 3, 4, FP_CB_RETURN, STEXE_GTCAT, returntag);
	CMDPage_MakeButtonEX(tag, 3, 3, FP_CB_EXIT, STEXE_CMDEXIT, 0);
}

function void CMDPage_MakeButton(int tag, int row, int col, int btndata){
	CMDPage_MakeButtonEX(tag, row,  col,  btndata, STEXE_CMDEVENT_CHECK, 0);
}

function void CMDPage_MakeButtonEX(int tag, int row, int col, int btndata, int exe, int arg)
{
	//Check on cmdbut_list.acs on Samu-Tools to see the respective properties.
	str icon = CMDBut_getIcon(btndata);

	int i = ImgButton_AddGrid(cmdpage_vars[0], row, col, 31.0, 31.0);
	ImgButton_setImage		(i, icon);
	ImgButton_setHoverImage	(i, "BUTTONS");
	ImgButton_setExecute	(i, exe);
	ImgButton_setArgs		(i, arg, btndata, 0);
	ImgButton_setTag		(i, tag);
	ImgButton_setExeHover	(i, STEXE_CMDBTNDESC);
	ImgButton_setArgsHover	(i, cmdpage_vars[1],cmdpage_vars[2],btndata);
	
	CMDPage_SaveGroup(btndata, 1, i);
	CMDPage_SaveGroup(btndata, 2, tag);
}

function void CMDPage_SaveGroup(int up, int id, int comp){
	cmdpage_vars[LISTUPPAGE_NCOMPGROUP * up + LISTUPPAGE_NPRIVARS + (id-1)] = comp;
}

function int CMDPage_LoadGroup(int up, int id){
	return cmdpage_vars[LISTUPPAGE_NCOMPGROUP * up + LISTUPPAGE_NPRIVARS + (id-1)];
}

function void CMDPage_UpdateButton(int btndata){
	int comp = CMDPage_LoadGroup(btndata, 1);
	int tag = CMDPage_LoadGroup(btndata, 2);

	if(pagetags[STTAGS_NOW] == tag){
		IMGButton_SetShow(comp, CMDBut_GetShowCond(btndata));
	}else{
		IMGButton_SetShow(comp, false);
	}
	
	ImgButton_setImage(comp, cond(CMDBut_GetAccessCond(btndata), CMDBut_getIcon(btndata), "CG00"));
}