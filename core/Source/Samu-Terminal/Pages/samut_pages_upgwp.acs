
// It's Time to revamp this.

int listup_vars[200];

#define LISTUPPAGE_NCOMPGROUP 7
#define LISTUPPAGE_NPRIVARS 15

function void ListUpPage_SaveGroup(int up, int id, int comp){
	listup_vars[LISTUPPAGE_NCOMPGROUP * up + LISTUPPAGE_NPRIVARS + (id-1)] = comp;
}

function int ListUpPage_LoadGroup(int up, int id){
	return listup_vars[LISTUPPAGE_NCOMPGROUP * up + LISTUPPAGE_NPRIVARS + (id-1)];
}

function void UpdateListUpPage(int pageTag){
	setPageTitle(pageTag, "Upgrade weapons", CR_CYAN);
	
	if(IsOnTheSamePage(pagetag)){
		/*
			Update script
		*/
		//Reset the stack.
		listup_vars[6] = 0;
		bool ihaveup1, ihaveup2, ihavewep;
		str titlecat;
		int color;
		if(listup_vars[5] == FP_BAS){ 
			titlecat = "Standard Set";
			color = CR_GREEN;
		}
		else if(listup_vars[5] == FP_ADV){
			titlecat = "Advanced Set";
			color = CR_CYAN;
		}
		else if(listup_vars[5] == FP_OP){ 
			titlecat = "Overpower Set";
			color = CR_ORANGE;
		}
		
		
		Label_setText(listup_vars[2], titlecat);
		Label_setColor(listup_vars[2], color);
		
		listup_vars[7] = 1 + Tech_IsDoneC(TECH_ARMORY_ARMS1) + Tech_IsDoneC(TECH_ARMORY_ARMS2);
		
		if(listup_vars[7] == 1) ListUpPage_ShowNavs(false);
		else ListUpPage_ShowNavs(true);
		
		for(int i = 0; i < fp_WeaponStack; i++){
			bool showit; // The showing condition for each weapon.
			ihaveup1 = checkinventory(WeaponUpgrade_getActor(i, 0));
			ihavewep = checkInventory(Weapon_GetActor(i));
			if(Weapon_getUpsNum(i) == 1) showit = !ihaveup1 && ihavewep;
			else{
				ihaveup2 = checkinventory(WeaponUpgrade_getActor(i, 1));
				showit = !(ihaveup1 || ihaveup2) && ihavewep;
			}
			if(Weapon_GetWepPack(i) == -1 && listup_vars[5] == 1){
				// In case of the boomstick, put it on the standard category.
				ListUpPage_ShowUpgrade(i, showit);
				ListUpPage_Update(i);
				if(showit) listup_vars[6]++;
			}else{
				// For the rest of them, place them on their respective categories.
				if(Weapon_GetCat(i) != listup_vars[5]){
					ListUpPage_ShowUpgrade(i, false);
				}else{
					ListUpPage_ShowUpgrade(i, showit);
					ListUpPage_Update(i);
					if(showit) listup_vars[6]++;
					
				}
			}
		}
		
		Label_setShow(Listup_vars[8], cond(!listup_vars[6], true, false));
		Label_setShow(Listup_vars[9], cond(!listup_vars[6], true, false));
	}
}

function void ListUpPage_Update(int weapon){
	// Updates the weapon to be recreated
	int lbl_name = ListUpPage_LoadGroup(weapon, 1);
	int lbl_desc = ListUpPage_LoadGroup(weapon, 2);
	int lbtn1 = ListUpPage_LoadGroup(weapon, 3);
	int btn1 = ListUpPage_LoadGroup(weapon, 4);
	int lbtn2 = ListUpPage_LoadGroup(weapon, 5);
	int btn2 = ListUpPage_LoadGroup(weapon, 6);
	int color = CR_WHITE;
	int noup = 0;
	bool condit;
	
	int card = listup_vars[0];
	int pos = listup_vars[6] + 1; 
	// Set the original colors here.
		if(Weapon_getCat(weapon) == FP_BAS) color = CR_GREEN;
		else if(Weapon_getCat(weapon) == FP_ADV) color = CR_CYAN;
		else if(Weapon_getCat(weapon) == FP_OP) color = CR_ORANGE;
	
	//Not hovering?, reset the name and description.
	if(comphover == -1 || comphover != btn1 || comphover != btn2) {
		Label_setText(lbl_desc, "Hover to check the possible upgrades.");
		Label_setText(lbl_name, Weapon_getName(weapon));
	}
	// Repositionate the name and the upgrade.
	Label_SetPosToCardOff(lbl_name, card, pos, 90.0, 0.0);
	Label_SetPosToCardOff(lbl_desc, card, pos, 90.0, 12.0);
	
	// Display the locked buttons if not enough upgrade points.
	if(Weapon_getUpsNum(weapon) == 1){
		// Case Unique upgrade
		condit = GetPlayUpts() < WeaponUpgrade_GetUpgPrice(weapon,0);
		Label_setColor	  (lbtn1, cond(condit, CR_RED, color));
		ImgButton_SetImage(btn1,  cond(condit, "BTNDEN", "BTUP00"));
			if(condit) noup++;
			
		//Restore Natural color if you can afford this upgrade.
		Label_setColor(lbl_desc, cond(noup == 1, CR_RED, color));
		Label_setColor(lbl_name, cond(noup == 1, CR_RED, color));
		
		// Repositionate this little group.
		Label_SetPosToCardOff(lbtn1, card, pos, 40.0, 18.0);
		ImgButton_SetPosToCardOff(btn1, card, pos, 24.0, 0.0);
		
	}else{ // Case 2 Upgrades.
		condit = GetPlayUpts() < WeaponUpgrade_GetUpgPrice(weapon,0);
		Label_setColor	  (lbtn1, cond(condit, CR_RED, color));
		ImgButton_SetImage(btn1,  cond(condit, "BTNDEN", "BTUP01"));
			if(condit) noup++;
			
		condit = GetPlayUpts() < WeaponUpgrade_GetUpgPrice(weapon,1);
		Label_setColor	  (lbtn2, cond(condit, CR_RED, color));
		ImgButton_SetImage(btn2,  cond(condit, "BTNDEN", "BTUP02"));
			if(condit) noup++;
			
		//Restore Natural color if you can afford any of these upgrades.
		Label_setColor(lbl_desc, cond(noup == 2, CR_RED, color));
		Label_setColor(lbl_name, cond(noup == 2, CR_RED, color));
		
		// Repositionate this little group.
		Label_SetPosToCardOff	 (lbtn1, card, pos, 16.0, 18.0);
		Label_SetPosToCardOff	 (lbtn2, card, pos, 64.0, 18.0);
		ImgButton_SetPosToCard	 (btn1, card, pos);
		ImgButton_SetPosToCardOff(btn2, card, pos, 48.0, 0.0);
	}
}

function void ListupPage_ShowNavs(bool condit){
	StrButton_SetShow(listup_vars[3], condit);
	StrButton_SetShow(listup_vars[4], condit);
}

function void ListUpPage_ShowUpgrade(int weapon, bool switchme){
	// Show the weapon groups, depending on a condition.
	int lbl_name = ListUpPage_LoadGroup(weapon, 1);
	int lbl_desc = ListUpPage_LoadGroup(weapon, 2);
	int lbtn1 = ListUpPage_LoadGroup(weapon, 3);
	int btn1 = ListUpPage_LoadGroup(weapon, 4);
	int lbtn2 = ListUpPage_LoadGroup(weapon, 5);
	int btn2 = ListUpPage_LoadGroup(weapon, 6);
	
	Label_setShow(lbl_name, switchme);
	Label_setShow(lbl_desc, switchme);
	Label_setShow(lbtn1, switchme);
	ImgButton_setShow(btn1, switchme);
	
	if(Weapon_getUpsNum(weapon) != 1){
		Label_setShow(lbtn2, switchme);
		ImgButton_setShow(btn2, switchme);
	}
}

function void InitListUpPage(int pageTag){
	int i = 0;
	int layout = 0;
	
	// Define the layout.
	Card_setPosition(100.0, 80.0);
	Card_setCells(10);
	Card_setVerticalOri(true);
	Card_setStep(40.0);
	listup_vars[0] = Card_Generate();
	listup_vars[1] = pageTag;
	
	// Create the unique components.
	//		Title: Slot[2].
	i = Label_Add(320.0, 60.0); 
	Label_setText(i, "Standard Set");
	Label_setFont(i,"StatBigs");
	Label_setTag (i, pagetag);
	Component_Save(Label_GetRect(i));
	listup_vars[2] = i;
	
	// 		Notification 1 if no weapons. Slot[8]
	i = Label_Dup(Vars_Mid_Wid(), Vars_Mid_Hei());
	Label_setText(i, "Upgrades not avilable.");
	Component_Save(Label_GetRect(i));
	listup_vars[8] = i;
	
	// 		Notification 2 if no weapons. Slot[9]
	i = Label_Dup(Vars_Mid_Wid(), Vars_Mid_Hei());
	Label_setFont(i,"confont");
	Label_setText(i, "\n\n\n\nEither you upgraded all your guns, or you don't have the basic ones. \n                         Try it next time...");
	listup_vars[9] = i;
	
	//		Previous: Slot[3].
	i = strbutton_add   (100.0, 45.0, "<");
	StrButton_SetColor  (i, cr_BLUE);
	StrButton_setTag    (i, pagetag);
	StrButton_SetExecute(i, STEXE_UPGPAGECAT);
	StrButton_SetExeArgs(i, 0, 0, 0);
	Component_Save(StrButton_GetRect(i));
	listup_vars[3] = i;
	
	//		Next: Slot[4].
	i = StrButton_Dup   (148.0, 45.0);
	StrButton_SetText   (i, ">");
	StrButton_SetExeArgs(i, 1, 0, 0);
	listup_vars[4] = i;
	//		Actual Category: var[5].
	listup_vars[5] = 1;
	//		Stack Counter, to make the stack effect.: var[6].
	listup_vars[6] = 0;
	
	// Welp, create all the components.
	for(int j = 0; j < fp_WeaponStack; j++){
		ListUpPage_AddWeaponToUp(j);
	}
}

function void ListUpPage_AddWeaponToUp(int weapon){
	//Creates a group of components to be updateable.
	int i;
	int layout = listup_vars[0];
	int pagetag = listup_vars[1];
	
	str wepname = Weapon_getName(weapon);
	str wepdesc = Weapon_getDesc(weapon);
	str wepup1 = WeaponUpgrade_getUpgPrice(weapon, 0);
	str wepup2 = WeaponUpgrade_getUpgPrice(weapon, 1);
	
	int title, desc;
	
	title = Label_AddCardOff(layout, 1, 90.0, 0.0); 
	Label_setText			(title,wepname);
	Label_setFont			(title,"StatBigs");
	Label_setTag			(title, pagetag);
	Label_setShow			(title, false);
	Label_setAligns			(title, HUD_ALIGN_LEFT, HUD_ALIGN_TOP);
	
	int color = CR_WHITE;
	if(Weapon_getCat(weapon) == FP_BAS) color = CR_GREEN;
	else if(Weapon_getCat(weapon) == FP_ADV) color = CR_CYAN;
	else if(Weapon_getCat(weapon) == FP_OP) color = CR_ORANGE;
	Label_setColor(title, color);
	
	Component_Save(Label_getRect(title));
	ListUpPage_SaveGroup(weapon, 1, title);
	
	desc = Label_DupCardOff	(layout, 1, 90.0, 12.0); 
	Label_setText			(desc,"Hover to check the possible upgrades.");
	Label_setFont			(desc,"Confont");
	Label_setWrapWidth		(desc, 400);
	ListUpPage_SaveGroup(weapon, 2, desc);
	
	if(Weapon_getUpsNum(Weapon) == 1){
		// The weapon contains an unique upgrade.
		i = Label_DupCardOff(layout, 1, 40.0, 18.0); 
		Label_setText		(i,strparam(d:wepup1, s:" UP"));
		Label_setAligns		(i, HUD_ALIGN_CENTER, HUD_ALIGN_CENTER);
		ListUpPage_SaveGroup(weapon, 3, i);
		
		i = ImgButton_AddCardOff(layout, 1, 32.0, 32.0, 24.0, 0.0);
		ImgButton_SetImage		(i, "BTUP00");
		ImgButton_SetHoverImage	(i, "BTNHOV");
		ImgButton_SetTag		(i, pagetag);
		ImgButton_SetExeHover	(i, STEXE_UPG0PAGEDESC);
		ImgButton_SetArgsHover	(i, weapon, desc, title);
		ImgButton_SetExecute	(i, STEXE_ASKUP);
		ImgButton_SetArgs		(i, weapon, 1, 0);
		ListUpPage_SaveGroup(weapon, 4, i);
	} else {
		// The weapon contains 2 upgrades.
		i = Label_DupCardOff(layout, 1, 16.0, 18.0); 
		Label_setText	(i,strparam(d:wepup1, s:" UP"));
		Label_setAligns	(i, HUD_ALIGN_CENTER, HUD_ALIGN_CENTER);
		ListUpPage_SaveGroup(weapon, 3, i);
	
		i = Label_DupCardOff(layout, 1, 64.0, 18.0); 
		Label_setText	(i,strparam(d:wepup2, s:" UP"));
		Label_setAligns	(i, HUD_ALIGN_CENTER, HUD_ALIGN_CENTER);
		ListUpPage_SaveGroup(weapon, 5, i);
		
		i = ImgButton_AddCard(layout, 1, 32.0, 32.0);
		ImgButton_SetImage		(i, "BTUP01");
		ImgButton_SetHoverImage	(i, "BTNHOV");
		ImgButton_SetExeHover	(i, STEXE_UPG0PAGEDESC);
		ImgButton_SetArgsHover	(i, weapon, desc, title);
		ImgButton_SetTag		(i, pagetag);
		ImgButton_SetExecute	(i, STEXE_ASKUP);
		ImgButton_SetArgs		(i, weapon, 1, 0);
		Component_Save(ImgButton_getRect(i));
		ListUpPage_SaveGroup(weapon, 4, i);
	
		i = ImgButton_DupCardOff(layout, 1, 32.0, 32.0, 48.0, 0.0);
		ImgButton_SetImage(i, "BTUP02");
		ImgButton_SetExeHover(i, STEXE_UPG1PAGEDESC);
		ImgButton_SetArgs		(i, weapon, 2, 0);
		ListUpPage_SaveGroup(weapon, 6, i);
	}
}
