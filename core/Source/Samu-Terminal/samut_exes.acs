/**
*
* 	<samut_exes.acs> 
* 	Execution Module!
*	Here you can store all action handlers that you want!
* 	Just try to DO NOT remove the core-ish ones.
*	Like the ASK, YES, NO, OKAY, OPEN, CLOSE & GTCAT Executions. 
*
**/

//Thank you TDDR!
function void SamuTerm_ServerCheck (int key){ SetInventory("SamuTInv_ActionKey", key); }
function bool SamuTerm_ClientCheck (int key) { return CheckInventory("SamuTInv_ActionKey") >= key; }

function void SamuTerm_ServerCheck2 (int key) { SetInventory("SamuTInv_Action2Key", key); }
function bool SamuTerm_ClientCheck2 (int key){ return CheckInventory("SamuTInv_Action2Key") >= key; }

function void SamuTerm_CallOpExecute (int cmd, int arg1, int arg2, int arg3){
	// Depends on what you wanna do.
	// Wanna give items, open doors? Use a negative value.
	// Wanna change the components?  Use a positive value.
	
	if(sgn(cmd) == 1) SamuTerm_ClientExecute(cmd, arg1, arg2, arg3);
	else if (sgn(cmd) == -1){
		//int args = PackBytes(arg1, arg2, arg3, 0);
		//Net Packets are Unreliable huh?
		//NamedRequestScriptPuke("SamuTerm_ServerExecute", cmd , arg1, arg2, arg3);
		ACS_NamedExecuteWithResult("SamuTerm_RequestServExe", cmd, arg1, arg2, arg3);
	}
	else return;
}

function void SamuTerm_ClientExecute (int cmd, int arg1, int arg2, int arg3){
	//This next action is for the terminal variable changes.
	SamuTerm_Execute(cmd, arg1, arg2, arg3);
}

script "SamuTerm_RequestServExe" (int cmd, int arg1, int arg2, int arg3){
	int key = CheckInventory("SamuTInv_ActionKey") + 1;
	int key2 = CheckInventory("SamuTInv_Action2Key") + 1;
	GiveInventory("SamuTInv_LockInput", 1);
	while(!SamuTerm_ClientCheck(key) || !SamuTerm_ClientCheck2(key2)) {
		if(!SamuTerm_ClientCheck(key))
			NamedRequestScriptPuke("SamuTerm_ServerExecute_Command", key, cmd);
		if(SamuTerm_ClientCheck(key))
			NamedRequestScriptPuke("SamuTerm_ServerExecute_Args", key, arg1, arg2, arg3);
		delay(3);
	}
	TakeInventory("SamuTInv_LockInput", 1);
    
}
int stexecute_server_cmd;
// I divided the server execution in 2 parts, one for setting the cmd for execution. and the other action for setting args and execute.
Script "SamuTerm_ServerExecute_Command" (int key, int cmd) NET{
	//This sets the command to execute.
	if(SamuTerm_ClientCheck(key)) {terminate;}
	
	stexecute_server_cmd = cmd;
	SamuTerm_ServerCheck(key);
}

Script "SamuTerm_ServerExecute_Args" (int key, int arg1, int arg2, int arg3) NET{
	//This adds the args on the command to execute, and executes it.
	if(SamuTerm_ClientCheck2(key)) {terminate;}

	SamuTerm_Execute(stexecute_server_cmd, arg1, arg2, arg3);
	SamuTerm_ServerCheck2(key);
}


#include "stexec_handler.acs"
#include "stexec_funs.acs"
