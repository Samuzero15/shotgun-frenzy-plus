///////////////////////////////////////////////////
//      SHOTGUN FRENZY PLUS
//   a Shotgun Frenzy fork by Samuzero15tlh

// fp_music.acs
// For the music handling script.

#library "FP_MUSIC"
#include "zcommon.acs"
#import "f_intdb.acs"

#define FP_SNDTRK_MAP 0
#define FP_SNDTRK_MUS 1

str f_OldMus[15][2];
str f_BossMus[15][2];
int oldmusic_stack = 0;
int bossmusic_stack = 0;

function void Music_AddOld(str map, str track){
	f_OldMus[oldmusic_stack][0] = map;
	f_OldMus[oldmusic_stack][1] = track;
	oldmusic_stack++;
}

function void Music_AddBoss(str map, str track){
	f_BossMus[bossmusic_stack][0] = map;
	f_BossMus[bossmusic_stack][1] = track;
	bossmusic_stack++;
}

function void Music_Initialize(void){
	Music_AddOld("CF01","D_MUS2");
	Music_AddOld("CF02","D_COOL");
	Music_AddOld("CF03","D_MUS3");
	Music_AddOld("CF04","D_MP1");
	Music_AddOld("CF05","D_MUS8");
	Music_AddOld("SD01","D_MUS3");
	Music_AddOld("SD02","D_COOL");
	Music_AddOld("SF01","D_MUS6");
	Music_AddOld("SF02","D_MUS4");
	Music_AddOld("SF03","D_COOL");
	Music_AddOld("SF04","D_MUS3");
	Music_AddOld("SF05","D_MUS7");

	Music_AddBoss("CF01","BVSWWTHM");
	Music_AddBoss("CF02","NONELIVE");
	Music_AddBoss("CF03","NONELIVE");
	Music_AddBoss("CF04","NONELIVE");
	Music_AddBoss("CF05","NONELIVE");
	Music_AddBoss("SF01","BVSWWTHM");
	Music_AddBoss("SF02","BVSWWTHM");
	Music_AddBoss("SF03","NONELIVE");
	Music_AddBoss("SF04","BVSWWTHM");
	Music_AddBoss("SF05","BVSWWTHM");
}

Script "SFPlus_PlayOldSoundtrack_Enter" Enter{
	// Re-call the script again if joining
	NamedExecuteClientScript("SFPlus_PlayOldSoundtrack", PlayerNumber());
}

script "SFPlus_PlayOldSoundtrack_Spectate" (int player) DISCONNECT
{ // Re-call the script again if spectating
	if (PlayerIsSpectator(player)){
		SetActivatorToPlayer(player);
		NamedExecuteClientScript("SFPlus_PlayOldSoundtrack", PlayerNumber());
	}	
}

Script "SFPlus_PlayOldSoundtrack" OPEN ClientSide {
	// Thank you Buu342 for the tips on the open clientsided scripts!
	SetActivatorToPlayer(ConsolePlayerNumber());
	int play = ConsolePlayerNumber();
	int game_over, game_ending, cvar, guardian_state, nuked, i;
	int last_values[3];
	Music_Initialize();
	while(1){
		// clientsided variables
		game_over = CheckInventory("HUD_GameOver");
		game_ending = CheckInventory("HUD_GameEnding");
		nuked = CheckInventory("HUD_NukeLaunched");
		guardian_state = CheckInventory("HUD_GuardianState");
		cvar = GetUserCvar(play , "sfp_oldsoundtrack");
		str map = strparam(n:-2);

		if(game_over){
			switch(game_ending){
				case 1: LocalSetMusic("D_END1"); break;
				case 2: LocalSetMusic("D_END2"); break;
				case 3: LocalSetMusic("D_END3"); break;
				case 4: LocalSetMusic("D_END4"); break;
				default: LocalSetMusic("D_IN"); 
			}
		}
		
		if (cvar 			!= 	last_values[0] || 
			guardian_state	!= 	last_values[1] || 
			nuked 			!= 	last_values[2]){ 
		//print(s:"Cvar: ", d:cvar,s:" Guardian: ", d:g_GuardianWave,  s:" Nuke Active:",d:c_NukeLaunched);
		// Activate only on guardian waves, nuke launchings or when changing the cvar.
			if(cvar == 1){ // Old soundtrack.
				if(guardian_state == INTDB_GUARDIANSTATE_ATTACK || guardian_state == INTDB_GUARDIANSTATE_DEFEAT || nuked){
					LocalSetMusic("D_BOSSo");
				}else{
					for (i = 0; i < 12; i++){
						if(stricmp(map,f_OldMus[i][FP_SNDTRK_MAP]) == 0){
							//log(s:"strcmp(",s:map, s:", ", s:f_oldMus[i][0], s:") = ", d:stricmp(map,f_OldMus[i][0]));
							LocalSetMusic(f_OldMus[i][FP_SNDTRK_MUS]);
							break;
						}
					}
				}
			}else{ // New soundtrack
				if((guardian_state == INTDB_GUARDIANSTATE_ATTACK || guardian_state == INTDB_GUARDIANSTATE_DEFEAT) || nuked){
					if(guardian_state == INTDB_GUARDIANSTATE_ATTACK || guardian_state == INTDB_GUARDIANSTATE_DEFEAT){
						for (i = 0; i < 10; i++){
							//log(s:"strcmp(",s:map, s:", ", s:f_BossMus[i][0], s:") = ", d:stricmp(map,f_BossMus[i][0]));
							if(stricmp(map,f_BossMus[i][FP_SNDTRK_MAP]) == 0){
								LocalSetMusic(f_BossMus[i][FP_SNDTRK_MUS]);
								break;
							}
						}
					}
					if(nuked){
						LocalSetMusic("D_BOSS");
					}
				}else LocalSetMusic("*");
			}
			last_values[0] = cvar;
			last_values[1] = guardian_state;
			last_values[2] = nuked;
			
		}
		delay(1);
	}
}