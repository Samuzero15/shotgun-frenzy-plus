///////////////////////////////////////////////////
//      SHOTGUN FRENZY
//   a mod by Wad'a'Holic

// f_PHUD.acs
// players heads up display
#library "f_PHUD"

#import "f_IntDB.acs"
#include "zcommon.acs"
#include "acsutils.acs"

// ************** CLIENTSIDE HUDMESSAGE SCRIPTS ************** 

script "PlayerHUd_ClearDisconnect" (int a) DISCONNECT{
	// Clear the vision for the quitter
	ClearHudMessage(80);
	ClearHudMessage(88);
	ClearHudMessage(89);
	ClearHudMessage(90);
	ClearHudMessage(91);
	ClearHudMessage(87);
	ClearHudMessage(86);
	ClearHudMessage(85);
	ClearHudMessage(84);
	ClearHudMessage(180);
	ClearHudMessage(178);
}

// display rank
script 604 (int l_Rank) clientside
{
	if(getCvar("screenblocks") == 11 && !CheckInventory("SamuTInv_UsingTerminal")){
		sethudsize(SFHUD_WIDTH, SFHUD_HEIGHT, 1);
		setfont("CONFONT");
		int x = 400.4;
		int y = 73.4;
		str rankTitle = "Rookie (1)";
		switch(l_Rank)
		{
			case 0:         rankTitle = "(1) Rookie (1)"; break;
			case 1:         rankTitle = "(2) Private (2)"; break;
			case 2:         rankTitle = "(3) Specialist (3)"; break;
			case 3:         rankTitle = "(4) Corporal (4)"; break;
			case 4:         rankTitle = "(5) Sergeant (5)"; break; 
			case 5:         rankTitle = "(6) Lieutenant (6)"; break;
			case 6:         rankTitle = "(7) Captain(7)"; break;
			case 7:         rankTitle = "(8) Major (8)"; break;
			case 8:         rankTitle = "(9)  Colonel (9)"; break;
			case 9:         rankTitle = "(10) Commander (10)"; break;
		}
		hudmessage(s:rankTitle; 0, 87, CR_CYAN, x, y, 1.0);
	}else ClearHudMessage(87);
}

// display hud
script 605 (int l_Type) clientside
{
	if(getCvar("screenblocks") == 11  && !CheckInventory("SamuTInv_UsingTerminal")){
		sethudsize(SFHUD_WIDTH, SFHUD_HEIGHT, 1);
		setfont("HUD");
		hudmessage(s:"a"; 0, 90, 0, 0.1, 0.1, 1.0);
	}else ClearHudMessage(90);
}

// *********************************************************** 

// demonic core attack message
script 616 (void)
{
			//If we're not in guardian wave or all batteries are down, don't let the demonic core get hurt.
			if (g_Status != 4)
			{
				SetActorProperty(109,APROP_Health,100000);
				sethudsize(s_ScreenSize[0], s_ScreenSize[1], s_ScreenSize[2]);
				setfont("BCOUNT");
				hudmessagebold(s:"a"; 1, 180, CR_Red, 0.1, 0.1, 3.0);
				setfont("BIGFONT");
				hudmessagebold(s:"DEMONIC CORE"; 1, 178, CR_Red, 570.0, 390.1, 3.0);
				setfont("CONFONT");
				hudmessagebold(s:"Core is invulnerable until\nall battery doors are down"; 1, 179, CR_White, 580.0, 420.1, 3.0);
			}
			else
			{
				sethudsize(s_ScreenSize[0], s_ScreenSize[1], s_ScreenSize[2]);
				setfont("BCOUNT");
				hudmessagebold(s:"a"; 1, 180, CR_Red, 0.1, 0.1, 3.0);
				setfont("BIGFONT");
				hudmessagebold(s:"DEMONIC CORE"; 1, 178, CR_Red, 570.0, 390.1, 3.0);
				setfont("CONFONT");
				hudmessagebold(s:"Taking damage!\n",d:GetActorProperty(109,APROP_Health),s:" Health remaining..."; 1, 179, CR_White, 580.0, 420.1, 3.0);
			}
	
}

Script "SFPlus_ShowForEveryone" OPEN
{
	while(!g_GameOver){
		delay(1);
		if (f_UseScoreSystem == 1)
			Acs_NamedExecuteAlways("HUD_ShowTeamScore", 0, getlevelinfo(LEVELINFO_KILLED_MONSTERS));
		
		if(f_GameType == INTDB_GAMETYPE_COMBATFRENZY || f_GameType == INTDB_GAMETYPE_SHOTGUNFRENZY){
			if(g_status != 0){
				if(g_GameTimer > 0)
					Acs_NamedExecuteAlways("HUD_ShowTimer", 0, g_GameTimer);
				else {
					switch(g_GuardianState){
						case INTDB_GUARDIANSTATE_STANDBY:
							Acs_NamedExecuteAlways("HUD_ShowTimer", 0, g_GuardianTimer);
						break;
						case INTDB_GUARDIANSTATE_PREPARED: 
							Acs_NamedExecuteAlways("HUD_ShowNumberLeft", 0, g_MonstersLeft);
						break;
						case INTDB_GUARDIANSTATE_ATTACK: 
							Acs_NamedExecuteAlways("HUD_ShowString", 0, 1);
						break;
						case INTDB_GUARDIANSTATE_DEFEAT:
							Acs_NamedExecuteAlways("HUD_ShowNumberLeft", 0, g_MonstersLeft);
						break;
					}	
				}
			}

		}else if (f_GameType == INTDB_GAMETYPE_SURVIVALDEFENDER){
			if(g_MonstersLeft > 0)
				Acs_NamedExecuteAlways("HUD_ShowNumberLeft", 0, g_MonstersLeft);
			else if (g_MonstersLeft == -1)
				Acs_NamedExecuteAlways("HUD_ShowString", 0, 2);
		}
					
	}
		//Acs_NamedExecuteAlways("HUD_ShowTimer", 0, g_GuardianTimer);
}


script "SFPlus_PlayerFullScreenHUD" ENTER
{
    // display loop
    while(1)
    {
		int kills = p_RankExp[p_Rank[playernumber()] + 1] - p_Exp[playernumber()];
		
		ACS_NAMEDEXECUTEALWAYS("SyncWithSBARINFO", 0, kills);
		
		if(getCvar("screenblocks") == 12 || getCvar("screenblocks") < 11 || CheckInventory("SamuTInv_UsingTerminal")){
			//[Samu] Hide the damn hud, ets annoying.
			ClearHudMessage(80);
			ClearHudMessage(88);
			ClearHudMessage(89);
			ClearHudMessage(90);
			ClearHudMessage(91);
			ClearHudMessage(87);
			ClearHudMessage(86);
			ClearHudMessage(85);
			ClearHudMessage(84);
			ClearHudMessage(180);
			ClearHudMessage(178);
			delay(1);
			continue;
		}
        // hud background
        sethudsize(s_ScreenSize[0], s_ScreenSize[1], s_ScreenSize[2]);
        acs_executealways(605, 0, 0, 0, 0);

        // mmm: add kills left display
       
        if (kills < 0)
          kills = 0;
        
        // hud information
        setfont("CONFONT");
		Acs_NamedExecuteAlways("Hud_ShowPlayerStats", 0, p_Credits[playernumber()], p_Exp_Points[playernumber()], p_TotalPlayerDeaths);
		Acs_NamedExecuteAlways("Hud_ShowPlayerStats_Streak", 0, p_Streak[playernumber()], p_StreakHi[playernumber()], getNextStreakMilestone());

    if(g_Status == 5)
	{
		Acs_NamedExecuteAlways("Hud_ShowCoreHealth", 0,
			5, getactorproperty(104,APROP_Health));
	}
	else if (c_NukeLaunched == 0 || g_Status < 4)
        {
		Acs_NamedExecuteAlways("Hud_ShowCoreHealth", 0,
			g_Status, getactorproperty(100 + g_status,APROP_Health));
        }
        else if(c_NukeLaunched == 1 || g_Status == 4)
        {
			Acs_NamedExecuteAlways("Hud_ShowCoreHealth", 0, 4, getactorproperty(104,APROP_Health));
		}
		
	
        
        // team credits and mech status (if a commander based game)
        if (f_Gametype == 1){
          Acs_NamedExecuteAlways("Hud_ShowTeamCredits_MechInfo", 0,
								c_credits, c_Commander, p_MechTimer[playernumber()]);
		}								
        //log(d:p_MechTimer[playernumber()]);
        // current rank
        acs_executealways(604, 0, p_Rank[playernumber()], 0, 0);
		
		// Rank Bar.
		Acs_NamedExecuteAlways("Hud_ShowExperienceBar", 0, kills * 20, p_RankExp[p_Rank[playernumber()] + 1], p_Exp[playernumber()]);
        
		
        delay(1);
    }
}   

script "Hud_ShowCoreHealth" (int which, int hp) clientside
{
	if(which > 0){
		sethudsize(SFHUD_WIDTH, SFHUD_HEIGHT, 1);
		setfont("CONFONT");
		int maxhp, percent, color;
		if (hp < 0) hp = 0;
		
		if(which == 5){
			maxhp = 1500;
			hudmessage(s:"\nCore: ", d:hp; 0, 88, CR_CREAM, 515.1, 10.1, 1.0);
		}else if (which == 4){
			maxhp = 1500;
			hudmessage(s:"\nSector: ", d:which, s:"\nCore: ",
              d:hp; 0, 88, CR_CREAM, 515.1, 10.1, 1.0);
		}else{
			maxhp = 750;
			hudmessage(s:"\nSector: ", d:which,s:"\nBattery: ", 
					d:hp; 0, 88, CR_CREAM, 515.1, 10.1, 1.0);
		}
		setfont("Statbigs");	
		percent = iceil(fixedDiv(hp, maxhp) * 100);
		if(percent == 100) 						color = CR_CYAN;
		else if(percent >= 75 && percent < 100) color = CR_GREEN;
		else if(percent >= 50 && percent < 75)  color = CR_YELLOW;
		else if(percent >= 25 && percent < 50) 	color = CR_ORANGE;
		else if(percent >  0  && percent < 25) 	color = CR_RED;
		else 									color = CR_BLACK;
		hudmessage(d:percent, s:" %"; 0, 80, color, 545.1, 40.1, 1.0);
	}else{ ClearHudMessage(88); ClearHudMessage(80); }
} 

script "Hud_ShowPlayerStats" (int credits, int exp, int deaths) clientside
{
	sethudsize(SFHUD_WIDTH, SFHUD_HEIGHT, 1);
		setfont("CONFONT");
		
		hudmessage(s:"\nCredits: \cf", d:credits,
          s:"\c-\nUp. Pts: \cv", d:exp,
          s:"\c-\n# Deaths: \cg", d:deaths; 0, 89, CR_CREAM, 164.1, 10.1, 1.0);
} 

script "Hud_ShowPlayerStats_Streak" (int ksnow, int kshigh, int ms) clientside
{
	sethudsize(SFHUD_WIDTH, SFHUD_HEIGHT, 1);
	setfont("CONFONT");
	hudmessage(s:"\n\n\n\nK. Streak:\ci ", d:ksnow, s:"\n\c-Hi:\ci ", d:kshigh, s:"\c- MS: \ci",d:ms; 0, 85, CR_CREAM, 164.1, 10.1, 1.0);
} 

function str PlayHUD_Timer(int tics){
	int min_i = ((tics + 35) / (35*60)) % 60;
	int sec_i = ((tics + 35) / 35)		% 60;
	str min_s = cond(min_i > 0, strparam(d:min_i, s:" m"), "");
	return StrParam(s:min_s,s:" ",d:sec_i, s:" s");
}

function str PlayHUD_TimerEX(int tics){
	int min_i = ((tics) / (35*60)) % 60;
	int sec_i = ((tics) / 35)		% 60;
	str min_s = cond(min_i > 0, strparam(d:min_i, s:" : "), "");
	str tics_s = cond(min_i < 1, strparam(s:".", d:(tics % 35)), "");
	str sec_s = cond(sec_i < 10 && min_i >= 1, strparam(s:"0", d:sec_i), strparam(d:sec_i));
	str color = "\cj";
	if(min_i < 1){
		color = "\cf";
		if(sec_i < 30 && sec_i >= 20) 		color = "\ck";
		else if(sec_i < 20 && sec_i >= 10) 	color = "\ci";
		else if(sec_i < 10) 				color = "\cg";
	} 
	
	return StrParam(s:color, s:min_s, s:sec_s, s:tics_s);
}



function str PlayHUD_MechStatus(int mech_tics){
	str mech_string = "\n\nMech Status:";
	
	if(mech_tics >= 0){
		mech_string = StrAdd(mech_string, cond(mech_tics,
			StrAdd("\n\crRepairing\cj\n", PlayHUD_Timer(mech_tics)),
			"\n\cvPrepared"));
	} else if(mech_tics == -1){
		mech_string = StrAdd(mech_string, "\n\ciManuvering");
	} else{
		mech_string = "";
	}
	return mech_string;
}

script "HUD_ShowTeamScore" (int points) clientside
{
	setfont("CONFONT");
	sethudsize(s_ScreenSize[0], s_ScreenSize[1], s_ScreenSize[2]);
	hudmessage(s:"Team score: ",d:points; 1, 256, CR_TAN, 400.0, 18.1, 7.0);
}

script "HUD_ShowTimer" (int tics) clientside
{
	setfont("STATBIGS");
	sethudsize(s_ScreenSize[0], s_ScreenSize[1], s_ScreenSize[2]);
	hudmessage(s: PlayHUD_TimerEX(tics); 1, 255, CR_TAN, 400.0, 28.1, 7.0);
	setfont("CONFONT");
}

script "HUD_ShowNumberLeft" (int val) clientside
{
	setfont("STATBIGS");
	sethudsize(s_ScreenSize[0], s_ScreenSize[1], s_ScreenSize[2]);
	hudmessage(d:val, s:" Left"; 1, 255, CR_TAN, 400.0, 28.1, 7.0);
	setfont("CONFONT");
}

script "HUD_ShowString" (int which) clientside
{
	str string = "";
	switch(which){
		case 1: string = "wait"; break;
		case 2: string = "DONE"; break;
	}
	setfont("STATBIGS");
	sethudsize(s_ScreenSize[0], s_ScreenSize[1], s_ScreenSize[2]);
	hudmessage(s:string; 1, 255, CR_TAN, 400.0, 28.1, 7.0);
	setfont("CONFONT");
}

script "Hud_ShowTeamCredits_MechInfo" (int teamcredits, int commander, int mech_tics) clientside
{	// Shows the team credits, and the current status about the mech.
		str com = cond(commander == 99, 
						"\n\cg-- No Comm. --", 
						strparam(s:"\n Com: ", n:commander+1));

		sethudsize(SFHUD_WIDTH, SFHUD_HEIGHT, 1);
		setfont("CONFONT");
		hudmessage(s:"Team Credits: ", d:teamcredits, 
            s:com,s:"\n",
			s:PlayHUD_MechStatus(Mech_tics); 0, 86, CR_CREAM, 400.4, 8.1, 1.0);
} 

script "Hud_ShowExperienceBar" (int kills, int rankexp, int currentkills) clientside
{
	sethudsize(SFHUD_WIDTH, SFHUD_HEIGHT, 1);
	str expbar;
	if	   (kills > rankexp *20)        expbar = "EXP01";
	else if(kills > rankexp *19)        expbar = "EXP02";
	else if(kills > rankexp *18)        expbar = "EXP03";
	else if(kills > rankexp *17)        expbar = "EXP04";
	else if(kills > rankexp *16)        expbar = "EXP05";
	else if(kills > rankexp *15)        expbar = "EXP06";
	else if(kills > rankexp *14)        expbar = "EXP07";
	else if(kills > rankexp *13)        expbar = "EXP08";
	else if(kills > rankexp *12)        expbar = "EXP09";
	else if(kills > rankexp *11)        expbar = "EXP10";
	else if(kills > rankexp *10)        expbar = "EXP11";
	else if(kills > rankexp *9)         expbar = "EXP12";
	else if(kills > rankexp *8)         expbar = "EXP13";
	else if(kills > rankexp *7)         expbar = "EXP14";
	else if(kills > rankexp *6)         expbar = "EXP15";
	else if(kills > rankexp *5)         expbar = "EXP16";
	else if(kills > rankexp *4)         expbar = "EXP17";
	else if(kills > rankexp *3)         expbar = "EXP18";
	else if(kills > rankexp *2)         expbar = "EXP19";
	else 								expbar = "EXP20";
	setfont(expbar);
	hudmessage(s:"a"; 0, 91, 0, 0.1, 0.1, 1.0);
	setfont("CONFONT");
	sethudsize(s_ScreenSize[0], s_ScreenSize[1], s_ScreenSize[2]);
	hudmessage(s:"< ",d:currentkills, s:" / ", d:rankexp,s:" >"; 0, 84, CR_CYAN, 400.4, 82.4, 1.0);
}
